use ::java::util::BlockState

dispatch minecraft:entity[falling_block] to struct FallingBlock {
	...super::EntityBase,
	/// NBT data for the placed block.
	TileEntityData?: minecraft:block[[BlockState.Name]],
	/// Block state for the placed block. Defaults to sand.
	BlockState?: BlockState,
	/// Ticks it has existed.
	Time?: int,
	/// Whether it should drop as a block when destroyed.
	DropItem?: boolean,
	/// Whether this it should hurt entities.
	HurtEntities?: boolean,
	/// Maximum damage it should deal.
	FallHurtMax?: int,
	/// Damage multiplier.
	FallHurtAmount?: float,
	/// Whether the block should be destroyed instead of placed after landing on a solid block.
	/// When `true`, the block is not dropped as an item, even if the DropItem tag is set to `true`.
	/// However, if the entity is deleted due to its Time value being too high, this tag is ignored and an item is dropped depending on the `DropItem` tag.
	/// Defaults to `1` for falling suspicious sand and suspicious gravel, and `0` for the other vanilla falling blocks and any summoned falling block.
	#[since="1.20"]
	CancelDrop?: boolean,
}
