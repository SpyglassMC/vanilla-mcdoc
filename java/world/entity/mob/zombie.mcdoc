use super::breedable::villager::VillagerData
use super::breedable::villager::Gossip
use super::breedable::villager::Offers

dispatch minecraft:entity[drowned,husk,zombie] to struct Zombie {
	...super::MobBase,
	/// Whether it is a baby.
	IsBaby?: boolean,
	/// Whether it can break doors.
	CanBreakDoors?: boolean,
	/// Ticks until it converts.
	DrownedConversionTime?: int,
	/// Ticks it has been in the water.
	InWaterTime?: int,
}

dispatch minecraft:entity[zombie_villager] to struct ZombieVillager {
	...Zombie,
	/// Villager's skin data
	VillagerData?: VillagerData,
	/// Villager's gossips
	Gossips?: [Gossip],
	/// Villager's offers
	Offers?: Offers,
	/// Ticks until the it is converted.
	ConversionTime?: int,
	/// Lower bits of the player's uuid who triggered the conversion.
	#[until="1.16"]
	ConversionPlayerLeast?: long,
	/// Upper bits of the player's uuid who triggered the conversion.
	#[until="1.16"]
	ConversionPlayerMost?: long,
	/// Player who triggered the conversion.
	#[uuid]
	#[since="1.16"]
	ConversionPlayer?: int[] @ 4,
}
