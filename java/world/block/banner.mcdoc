use ::java::data::variants::banner_pattern::BannerPattern
use ::java::util::DyeColorInt
use ::java::util::DyeColor

dispatch minecraft:block_entity[banner] to struct Banner {
	...super::BlockEntity,
	...super::Nameable,
	#[until="1.20.5"]
	Patterns?: [BannerPatternLayer],
	#[since="1.20.5"]
	patterns?: [BannerPatternLayer]
}

type BannerPatternLayer = (
	#[until="1.20.5"] struct {
		/// The dye color of the pattern.
		Color?: DyeColorInt,
		/// The pattern ID.
		Pattern?: BannerPatternType,
	} |
	#[since="1.20.5"] struct {
		/// The dye color of the pattern.
		color: DyeColor,
		/// The banner pattern.
		pattern: (#[id="banner_pattern"] string | BannerPattern),
	} |
)

dispatch minecraft:block[
	white_banner,
	orange_banner,
	magenta_banner,
	light_blue_banner,
	yellow_banner,
	lime_banner,
	pink_banner,
	gray_banner,
	light_gray_banner,
	cyan_banner,
	purple_banner,
	blue_banner,
	brown_banner,
	green_banner,
	red_banner,
	black_banner,
	white_wall_banner,
	orange_wall_banner,
	magenta_wall_banner,
	light_blue_wall_banner,
	yellow_wall_banner,
	lime_wall_banner,
	pink_wall_banner,
	gray_wall_banner,
	light_gray_wall_banner,
	cyan_wall_banner,
	purple_wall_banner,
	blue_wall_banner,
	brown_wall_banner,
	green_wall_banner,
	red_wall_banner,
	black_wall_banner,
] to minecraft:block_entity[banner]

// Until 1.20.5
enum(string) BannerPatternType {
	/// Bottom Stripe (Base)
	BottomStripe = "bs",
	/// Top Stripe (Chief)
	TopStripe = "ts",
	/// Left Stripe (Pale dexter)
	LeftStripe = "ls",
	/// Right Stripe (Pale sinister)
	RightStripe = "rs",
	/// Center Stripe (Vertical) (Pale)
	CenterStripeVertical = "cs",
	/// Middle Stripe (Horizontal) (Fess)
	MiddleStripeHorizontal = "ms",
	/// Down Right Stripe (Bend)
	DownRightStripe = "drs",
	/// Down Left Stripe (Bend sinister)
	DownLeftStripe = "dls",
	/// Small (Vertical) Stripes (Paly)
	SmallVerticalStripes = "ss",
	/// Diagonal Cross (Saltire)
	DiagonalCross = "cr",
	/// Square Cross (Cross)
	SquareCross = "sc",
	/// Left of Diagonal (Per bend sinister)
	LeftOfDiagonal = "ld",
	/// Right of upside-down Diagonal (Per bend)
	RightOfUpsideDownDiagonal = "rud",
	/// Left of upside-down Diagonal (Per bend inverted)
	LeftOfUpsideDownDiagonal = "lud",
	/// Right of Diagonal (Per bend sinister inverted)
	RightOfDiagonal = "rd",
	/// Vertical Half (left) (Per pale)
	VerticalHalfLeft = "vh",
	/// Vertical Half (right) (Per pale inverted)
	VerticalHalfRight = "vhr",
	/// Horizontal Half (top) (Per fess)
	HorizontalHalfTop = "hh",
	/// Horizontal Half (bottom) (Per fess inverted)
	HorizontalHalfBottom = "hhb",
	/// Bottom Left Corner (Base dexter canton)
	BottomLeftCorner = "bl",
	/// Bottom Right Corner (Base sinister canton)
	BottomRightCorner = "br",
	/// Top Left Corner (Chief dexter canton)
	TopLeftCorner = "tl",
	/// Top Right Corner (Chief sinister canton)
	TopRightCorner = "tr",
	/// Bottom Triangle (Chevron)
	BottomTriangle = "bt",
	/// Top Triangle (Inverted chevron)
	TopTriangle = "tt",
	/// Bottom Triangle Sawtooth (Base indented)
	BottomTriangleSawtooth = "bts",
	/// Top Triangle Sawtooth (Chief indented)
	TopTriangleSawtooth = "tts",
	/// Middle Circle (Roundel)
	MiddleCircle = "mc",
	/// Middle Rhombus (Lozenge)
	MiddleRhombus = "mr",
	/// Border (Bordure)
	Border = "bo",
	/// Curly Border (Bordure indented)
	CurlyBorder = "cbo",
	/// Brick (Field masoned)
	Brick = "bri",
	/// Gradient (Gradient)
	Gradient = "gra",
	/// Gradient upside-down (Base gradient)
	GradientUpsideDown = "gru",
	/// Creeper (Creeper charge)
	Creeper = "cre",
	/// Skull (Skull charge)
	Skull = "sku",
	/// Flower (Flower charge)
	Flower = "flo",
	/// Mojang (Thing)
	Mojang = "moj",
	/// Globe (Globe)
	Globe = "glb",
	/// Piglin (Piglin)
	#[since="1.16"]
	Piglin = "pig",
}
