dispatch minecraft:item_component[profile] to struct Profile {
	...(
		#[canonical] struct {
			/// Name of a player profile, i.e. its username.
			name?: string,
			/// UUID of the owner. Used to update the other tags when the chunk loads or the holder logs in, in case the owner's name has changed.
			id?: int[] @ 4,
			/// Resolved textures hosted on the minecraft CDN.
			properties?: [struct {
				// TODO: Provide better doc for this
				/// Usually `textures`.
				name: string,
				// TODO: Consider providing specific tooling for this.
				/// Base64 encoded JSON value of the texture index.
				value: string,
				/// Verifies the hash of the resulting texture.
				signature?: string,
			}],
		} |
		struct {
			// Name of a player profile, i.e. its username.
			name: string,
		}
	)
}

dispatch minecraft:item_component[note_block_sound] to (#[id=sound_event] string)

dispatch minecraft:item[player_head] to struct PlayerHead {
	#[since="1.20.5"]
	"minecraft:profile": Profile,
	/// Sound event to be played by a note block if this player head is placed above it.
	#[since="1.20.5"]
	"minecraft:note_block_sound": #[id=sound_event] string // TODO: Add old tag?
	#[until="1.20.5"]
	SkullOwner: (SkullOwner | string),
}

struct SkullOwner {
	/// Optional.
	#[uuid]
	Id: (
		#[until=1.16] string |
		#[since=1.16] int[] @ 4 |
	),
	/// Name of the owner, if missing appears as a steve head.
	Name: string,
	Properties: Properties,
}

struct Properties {
	textures: [Texture],
}

struct Texture {
	Signature: string,
	/// Base64 encoded JSON value of the texture index.
	Value: string,
}
