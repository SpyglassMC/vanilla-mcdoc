dispatch minecraft:resource[font] to struct Font {
	providers: [GlyphProvider],
}

struct GlyphProvider {
	type: GlyphProviderType,
	...minecraft:glyph_provider[[type]],
	filter?: struct {
		[FontOption]: boolean,
	},
}

enum(string) GlyphProviderType {
	Bitmap = "bitmap",
	TrueType = "ttf",
	#[since="1.19"] Space = "space",
	#[until="1.20"] LegacyUnicode = "legacy_unicode",
	#[since="1.20"] Unihex = "unihex",
	#[since="1.20"] Reference = "reference",
}

enum(string) FontOption {
	Uniform = "uniform",
	JapaneseVariants = "jp",
}

dispatch minecraft:glyph_provider[bitmap] to struct BitmapProvider {
	// TODO
	file: string,
	height?: int,
	ascent: int,
	chars: [string @ 1..] @ 1..,
}

dispatch minecraft:glyph_provider[space] to struct SpaceProvider {
	advances: struct {
		[string @ 1]: float,
	},
}

dispatch minecraft:glyph_provider[ttf] to struct TtfProvider {
	// TODO
	file: string,
	size?: float,
	oversample?: float,
	shift?: [float, float],
	skip?: (string | [string]),
}

#[until="1.20"]
dispatch minecraft:glyph_provider[legacy_unicode] to struct LegacyUnicodeProvider {
	sizes: string,
	template: string,
}

#[since="1.20"]
dispatch minecraft:glyph_provider[unihex] to struct UnihexProvider {
	// TODO
	/// ZIP archive containing one or more *.hex files (files in archive with different extensions are ignored).
	hex_file: string,
	#[until="1.21.6"]
	...struct {
		/// List of ranges to override the size of.
		size_overrides: [UnihexOverrideRange],
	},
	#[since="1.21.6"]
	...struct {
		/// List of ranges to override the size of.
		size_overrides?: [UnihexOverrideRange],
	},
}

struct UnihexOverrideRange {
	// TODO: codepoint; "\u3001"
	/// Minimum in codepoint range (inclusive).
	from: string,
	/// Maximum in codepoint range (inclusive).
	to: string,
	/// Position of left-most column of the glyph.
	left: int @ 0..255,
	/// Position of right-most column of the glyph.
	right: int @ 0..255,
}

/// Inclusion is performed after all fonts are loaded, so it will include all providers for a given font defined in all datapacks.
#[since="1.20"]
dispatch minecraft:glyph_provider[reference] to struct ReferenceProvider {
	id: #[id="font"] string,
}
