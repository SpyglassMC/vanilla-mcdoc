use ::java::util::block_state::BlockState
use super::HeightProvider
use super::VerticalAnchor
use super::FloatProvider

type CarverRef = (
	#[id="worldgen/configured_carver"] string |
	ConfiguredCarver |
)

dispatch minecraft:resource["worldgen/configured_carver"] to struct ConfiguredCarver {
	type: #[id="worldgen/carver"] string,
	config: struct CarverConfigBase {
		probability: float @ 0..1,
		#[since="1.19"]
		replaceable?: (
			[#[id="block"] string] |
			#[id(registry="block",tags="allowed")] string |
		),
		#[since="1.17"]
		...struct ModernCarverConfig {
			y: HeightProvider,
			yScale: FloatProvider<float>,
			lava_level: VerticalAnchor,
			#[until="1.18"]
			aquifers_enabled: boolean,
			debug_settings?: CarverDebugSettings,
		},
		...minecraft:carver_config[[%parent.type]],
	},
}

struct CarverDebugSettings {
	debug_mode?: boolean,
	air_state: BlockState,
	water_state: BlockState,
	lava_state: BlockState,
	barrier_state: BlockState,
}

#[since="1.17"]
dispatch minecraft:carver_config[canyon] to struct CanyonConfig {
	vertical_rotation: FloatProvider<float>,
	shape: CanyonShape,
}

struct CanyonShape {
	distance_factor: FloatProvider<float>,
	thickness: FloatProvider<float>,
	width_smoothness: int @ 0..,
	horizontal_radius_factor: FloatProvider<float>,
	vertical_radius_default_factor: float,
	vertical_radius_center_factor: float,
}

#[since="1.17"]
dispatch minecraft:carver_config[cave,nether_cave] to struct CaveConfig {
	horizontal_radius_multiplier: FloatProvider<float>,
	vertical_radius_multiplier: FloatProvider<float>,
	floor_level: FloatProvider<float @ -1..1>,
}
