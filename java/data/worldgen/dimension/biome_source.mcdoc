struct BiomeSource {
	type: #[id="worldgen/biome_source"] string,
	...minecraft:biome_source[[type]],
}

/// Biomes generate in a checkerboard chunk pattern.
dispatch minecraft:biome_source[checkerboard] to struct Checkerboard {
	scale?: int @ 0..62,
	biomes: (
		[#[id="worldgen/biome"] string] |
		#[since="1.18.2"] #[id(registry="worldgen/biome",tags=allowed)] string |
	),
}

/// One biome for the whole world.
dispatch minecraft:biome_source[fixed] to struct Fixed {
	biome: #[id="worldgen/biome"] string,
}

/// Custom biome distribution with configurable parameters.
dispatch minecraft:biome_source[multi_noise] to struct MultiNoise {
	#[until="1.18"]
	seed: long,
	...(
		struct {
			preset: (
				#[until="1.18"] MultiNoisePreset |
				#[until="1.18"] #[id] MultiNoisePreset |
			),
		} |
		struct {
			#[since="1.16.2"] #[until="1.18"]
			temperature_noise: NoiseParameters,
			#[since="1.16.2"] #[until="1.18"]
			humidity_noise: NoiseParameters,
			#[since="1.16.2"] #[until="1.18"]
			altitude_noise: NoiseParameters,
			#[since="1.16.2"] #[until="1.18"]
			weirdness_noise: NoiseParameters,
			biomes: [struct {
				biome: #[id="worldgen/biome"] string,
				parameters: ClimateParameters,
			}],
		} |
	),
}

enum(string) MultiNoisePreset {
	Nether = "nether",
	#[since="1.18"] Overworld = "overworld",
}

dispatch minecraft:resource["worldgen/noise"] to struct NoiseParameters {
	firstOctave: int,
	amplitudes: [double],
}

struct ClimateParameters {
	temperature: ClimateParameter,
	humidity: ClimateParameter,
	#[until="1.18"]
	altitude: float @ -2..2,
	#[since="1.18"]
	continentalness: ClimateParameter,
	#[since="1.18"]
	erosion: ClimateParameter,
	weirdness: ClimateParameter,
	#[since="1.18"]
	depth: ClimateParameter,
	offset: float @ 0..1,
}

type ClimateParameter = (
	float @ -2..2 |
	#[since="1.18"]
	[float @ -2..2] @ 2 |
)


/// Biome distribution for the End.
dispatch minecraft:biome_source[the_end] to struct TheEnd {
	#[until="1.19"]
	seed: long,
}

/// Biome distribution for the Overworld.
#[until="1.18"]
dispatch minecraft:biome_source[vanilla_layered] to struct VanillaLayered {
	seed: long,
	large_biomes?: boolean,
	legacy_biome_init_layer?: boolean,
}
