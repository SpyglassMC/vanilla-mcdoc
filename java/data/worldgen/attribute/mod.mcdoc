use ::java::util::color::StringRGB
use ::java::util::particle::Particle
use ::java::util::text::Text
use ::java::data::util::SoundEventRef
use super::biome::BiomeMusic
use super::biome::MoodSound
use super::biome::BiomeSoundAdditions
use modifier::BooleanAttributeModifier
use modifier::FloatAttributeModifier
use modifier::ColorAttributeModifier

type EnvironmentAttributeMap<K> = struct {
	[K]: (
		minecraft:environment_attribute[[%key]] |
		minecraft:environment_attribute_modifier[[%key]] |
		struct OverrideModifier {
			modifier?: "override",
			argument: minecraft:environment_attribute[[%parent.%key]],
		} |
	),
}

dispatch minecraft:environment_attribute_modifier[%unknown] to ()

type GlobalEnvironmentAttributeMap = EnvironmentAttributeMap<#[id="environment_attribute"] string>
type PositionalEnvironmentAttributeMap = EnvironmentAttributeMap<#[id(registry="environment_attribute", exclude=["gameplay/fast_lava"])] string>

dispatch minecraft:environment_attribute[
	"visual/extra_fog",
	"gameplay/can_start_raid",
	"gameplay/water_evaporates",
	"gameplay/respawn_anchor_works",
	"gameplay/nether_portal_spawns_piglin",
	"gameplay/fast_lava",
	"gameplay/increased_fire_burnout",
	"gameplay/piglins_zombify",
	"gameplay/snow_golem_melts",
] to boolean
dispatch minecraft:environment_attribute_modifier[
	"visual/extra_fog",
	"gameplay/can_start_raid",
	"gameplay/water_evaporates",
	"gameplay/respawn_anchor_works",
	"gameplay/nether_portal_spawns_piglin",
	"gameplay/fast_lava",
	"gameplay/increased_fire_burnout",
	"gameplay/piglins_zombify",
	"gameplay/snow_golem_melts",
] to BooleanAttributeModifier

dispatch minecraft:environment_attribute[
	"visual/cloud_height",
] to float
dispatch minecraft:environment_attribute[
	"visual/water_fog_radius",
] to float @ 0..
dispatch minecraft:environment_attribute[
	"visual/cloud_opacity",
	"audio/music_volume",
] to float @ 0..1
dispatch minecraft:environment_attribute_modifier[
	"visual/cloud_height",
	"visual/water_fog_radius",
	"visual/cloud_opacity",
	"audio/music_volume",
] to FloatAttributeModifier

dispatch minecraft:environment_attribute[
	"visual/fog_color",
	"visual/water_fog_color",
	"visual/sky_color",
] to StringRGB
dispatch minecraft:environment_attribute_modifier[
	"visual/fog_color",
	"visual/water_fog_color",
	"visual/sky_color",
] to ColorAttributeModifier

dispatch minecraft:environment_attribute["visual/default_dripstone_particle"] to Particle

dispatch minecraft:environment_attribute["visual/ambient_particles"] to [AmbientParticle]

dispatch minecraft:environment_attribute["audio/background_music"] to struct BackgroundMusic {
	/// Default music to play
	default?: BiomeMusic,
	/// Overrides default music when underwater
	underwater?: BiomeMusic,
	/// Overrides default music when in creative mode
	creative?: BiomeMusic,
}

dispatch minecraft:environment_attribute["audio/ambient_sounds"] to struct AmbientSounds {
	loop?: SoundEventRef,
	mood?: MoodSound,
	additions?: (BiomeSoundAdditions | [BiomeSoundAdditions]),
}

dispatch minecraft:environment_attribute["gameplay/bed_rule"] to struct BedRule {
	can_sleep: BedRuleType,
	can_set_spawn: BedRuleType,
	explodes?: boolean,
	error_message?: Text,
}

struct AmbientParticle {
	particle: Particle,
	probability: float @ 0..1,
}

enum(string) BedRuleType {
	Always = "always",
	WhenDark = "when_dark",
	Never = "never",
}
