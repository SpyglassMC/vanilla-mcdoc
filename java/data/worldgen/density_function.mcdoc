type DensityFunctionRef = (
	#[id="worldgen/density_function"] string |
	DensityFunction |
)

type NoiseRange = float @ -1000000..1000000

type DensityFunction = (
	NoiseRange | 
	struct {
		type: #[id="worldgen/density_function_type"] string,
		...minecraft:density_function[[type]],
	} |
)

dispatch minecraft:resource["worldgen/density_function"] to DensityFunction

dispatch minecraft:density_function[
	abs,
	blend_density,
	cache_2d,
	cache_all_in_cell,
	cache_once,
	cube,
	flat_cache,
	half_negative,
	interpolated,
	quarter_negative,
	slide,
	square,
	squeeze,
] to struct OneArgument {
	argument: DensityFunctionRef,
}

dispatch minecraft:density_function[
	add,
	max,
	min,
	mul,
] to struct TwoArguments {
	argument1: DensityFunctionRef,
	argument2: DensityFunctionRef,
}

dispatch minecraft:density_function[clamp] to struct Clamp {
	input: DensityFunction,
	min: NoiseRange,
	max: NoiseRange,
}

dispatch minecraft:density_function[constant] to struct Constant {
	argument: NoiseRange,
}

dispatch minecraft:density_function[noise] to struct Noise {
	noise: #[id="worldgen/noise"] string,
	xz_scale: float,
	y_scale: float,
}

#[since="1.19"]
dispatch minecraft:density_function[old_blended_noise] to struct OldBlendedNoise {
	xz_scale: float,
	y_scale: float,
	xz_factor: float,
	y_factor: float,
	smear_scale_multiplier: float @ 1..8,
}

dispatch minecraft:density_function[range_choice] to struct RangeChoice {
	input: DensityFunctionRef,
	min_inclusive: NoiseRange,
	max_exclusive: NoiseRange,
	when_in_range: DensityFunctionRef,
	when_out_of_range: DensityFunctionRef,
}

dispatch minecraft:density_function[shifted_noise] to struct ShiftedNoise {
	...Noise,
	shift_x: DensityFunctionRef,
	shift_y: DensityFunctionRef,
	shift_z: DensityFunctionRef,
}

dispatch minecraft:density_function[
	shift,
	shift_a,
	shift_b,
] to struct Shift {
	argument: #[id="worldgen/noise"] string,
}

dispatch minecraft:density_function[spline] to struct Spline {
	spline: CubicSpline,
	#[until="1.19"]
	min_value: NoiseRange,
	#[until="1.19"]
	max_value: NoiseRange,
}

#[until="1.19"]
dispatch minecraft:density_function[terrain_shaper_spline] to struct TerrainShaperSpline {
	spline: SplineType,
	min_value: NoiseRange,
	max_value: NoiseRange,
	continentalness: DensityFunctionRef,
	erosion: DensityFunctionRef,
	weirdness: DensityFunctionRef,
}

enum(string) SplineType {
	Offset = "offset",
	Factor = "factor",
	Jaggedness = "jaggedness",
}

dispatch minecraft:density_function[weird_scaled_sampler] to struct WeirdScaledSampler {
	rarity_value_mapper: RarityType,
	noise: #[id="worldgen/noise"] string,
	input: DensityFunctionRef,
}

enum(string) RarityType {
	Type1 = "type_1",
	Type2 = "type_2",
}

dispatch minecraft:density_function[y_clamped_gradient] to struct YClampedGradient {
	from_y: int @ -4064..4062,
	to_y: int @ -4064..4062,
	from_value: NoiseRange,
	to_value: NoiseRange,
}

type CubicSpline = (
	float |
	struct {
		coordinate: (
			#[until="1.19"] TerrainCoordinate |
			#[since="1.19"] DensityFunctionRef |
		),
		points: [SplinePoint],
	} |
)

enum(string) TerrainCoordinate {
	Continents = "continents",
	Erosion = "erosion",
	Weirdness = "weirdness",
	Ridges = "ridges",
}

struct SplinePoint {
	location: float,
	derivative: float,
	value: CubicSpline,
}
