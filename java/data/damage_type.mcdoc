use ::java::util::text::Text

#[since="1.19.4"]
dispatch minecraft:resource[damage_type] to struct DamageType {
	/// The message id used for deaths caused by this damage type.
	/// Is combined with the result of `death_message_type` to form a translation key.
	message_id: string,
	/// Amount of hunger exhaustion to cause.
	exhaustion: float @ 0..,
	/// Whether to scale damage with difficulty levels.
	scaling: DamageScaling,
	/// Controls how damage manifests when inflicted on players. Defaults to `hurt`.
	effects?: DamageEffects,
	/// Controls if special death message variants are used. Defaults to `default`.
	///
	/// For more info see: https://minecraft.wiki/w/Damage_type#Death_messages
	death_message_type?: DeathMessageType,
}

enum(string) DamageScaling {
	/// Always the same.
	Never = "never",
	/// Always scale with difficulty.
	Always = "always",
	/// Scale with difficulty if it was caused by a living entity who is not a player.
	LivingNonPlayer = "when_caused_by_living_non_player",
}

enum(string) DamageEffects {
	/// Default hurt sound.
	Hurt = "hurt",
	/// Thorns hurt sound.
	Thorns = "thorns",
	/// Drowing sound.
	Drowning = "drowning",
	/// A single tick of burning hurt sound.
	Burning = "burning",
	/// Berry bush poke sound.
	Poking = "poking",
	/// A single tick of freezing hurt sound.
	Freezing = "freezing",
}

enum(string) DeathMessageType {
	/// Resulting translation key of `death.attack.` + message_id.
	Default = "default",
	/// Resulting translation key of `death.attack.` + message_id.
	FallVariants = "fall_variants",
	/// Resulting translation key of `death.attack.` + message_id + `.link`.
	IntentionalGameDesign = "intentional_game_design",
}
