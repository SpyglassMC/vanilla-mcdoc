enum(string) AttributeName {
	MaxHealth = "generic.maxHealth",
	FollowRange = "generic.followRange",
	KnockbackResistance = "generic.knockbackResistance",
	MovementSpeed = "generic.movementSpeed",
	AttackDamage = "generic.attackDamage",
	Armor = "generic.armor",
	ArmorToughness = "generic.armorToughness",
	AttackKnockback = "generic.attackKnockback",
	AttackSpeed = "generic.attackSpeed",
	Luck = "generic.luck",
	HorseJumpStrength = "horse.jumpStrength",
	FlyingSpeed = "generic.flyingSpeed",
	ZombieSpawnReinforcements = "zombie.spawnReinforcements",
}

enum(string) AttributeOperation {
	/// Adds all of the modifiers' amounts to the current value of the attribute.
	AddValue = "add_value",
	/// Multiplies the current value of the attribute by `(1 + x)`,
	/// where `x` is the sum of the modifiers' amounts.
	AddMultipliedBase = "add_multiplied_base",
	/// For every modifier, multiplies the current value of the attribute by `(1 + x)`,
	/// where `x` is the amount of the particular modifier.
	AddMultipliedTotal = "add_multiplied_total"
}

enum(int) LegacyOperation {
	/// aka. `add_value`. Adds all of the modifiers' amounts to the current value of the attribute.
	Additive = 0,
	/// aka. `add_multiplied_base`. Multiplies the current value of the attribute by (1 + x),
	/// where x is the sum of the modifiers' amounts.
	Multiplicative = 1,
	/// aka. `add_multiplied_total`. For every modifier, multiplies the current value of the attribute by (1 + x),
	/// where x is the amount of the particular modifier.
	/// Functions the same as Operation 1 if there is only a single modifier with operation 1 or 2.
	/// However, for multiple modifiers it will multiply the modifiers rather than adding them
	Percentage = 2,
}
