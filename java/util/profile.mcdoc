type Profile = (
	#[until="1.21.9"] #[canonical]
	struct {
		/// Username of a player profile.
		name?: string,
		/// UUID of the owner. Used to update the other tags when the chunk loads or the holder logs in, in case the owner's name has changed.
		id?: int[] @ 4,
		/// Resolved textures hosted on the minecraft CDN.
		properties?: (
			#[canonical] [ProfileProperty] |
			ProfilePropertyMap |
		)
	} |
	#[since="1.21.9"] #[canonical]
	struct {
		/// Username of a player profile.
		/// If `id` doesn't exist, this field is used to fetch the current skin of the profile.
		name?: string,
		/// UUID of the player profile.
		/// If `name` doesn't exist, this field is used to fetch the current skin of the profile.
		id?: int[] @ 4,
		/// Resolved textures hosted on the minecraft CDN.
		properties?: (
			#[canonical] [ProfileProperty] |
			ProfilePropertyMap |
		)
	} |
	string |
)

struct ProfileProperty {
	// TODO: Provide better doc for this
	/// Usually `textures`.
	name: string,
	// TODO: Consider providing specific tooling for this.
	/// Base64 encoded JSON value of the texture index.
	value: string,
	/// Verifies the hash of the resulting texture.
	signature?: string,
}

struct ProfilePropertyMap {
	// TODO: Consider providing specific tooling for this.
	/// The key is usually `textures`.
	/// Base64 encoded JSON value of the texture index.
	[string]: [string]
}
