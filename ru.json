{
	"::java::assets::atlas::Atlas.sources": "Список источников спрайтов, которые могут добавлять или удалять текстуры спрайтов в этот атлас.",
	"::java::assets::atlas::Directory.prefix": "Префикс в имени спрайта, обычно заканчивается `/`.",
	"::java::assets::atlas::Directory.source": "Директория, где находятся текстуры, включить, относительно папки `textures`, не включая завершающий `/`.",
	"::java::assets::atlas::PalettedPermutations.separator": "Значение, используемое при объединении имён текстуры и изменения для получения имени спрайта.\nПо умолчанию `_`.",
	"::java::assets::atlas::Single.resource": "Местоположение источника одной текстуры .",
	"::java::assets::atlas::Single.sprite": "Идентификатор спрайта, на который можно ссылаться.\nЕсли не указан, равен `resource`.",
	"::java::assets::atlas::Unstitch.divisor_x": "Если задана ширина ресурса, регионы будут использовать пиксельные координаты.",
	"::java::assets::atlas::Unstitch.divisor_y": "Если задана высота ресурса, регионы будут использовать пиксельные координаты.",
	"::java::assets::block_state_definition::BlockStateDefinitionMultipartEntry.when": "Одно условие или список, как минимум с одним условием.",
	"::java::assets::equipment::Dyeable.color_when_undyed": "Если указано, этот слой будет окрашен в цвет, содержащийся в компоненте `dyed_color`.\nЕсли элемент не подлежит окрашиванию или не окрашен, он будет окрашен в этот цвет.\nЕсли не указано и элемент не окрашен, слой будет скрыт.",
	"::java::assets::equipment::Equipment.layers": "Список слоев для каждого типа слоя модели.",
	"::java::assets::equipment::Layer.dyeable": "Настраивает, как этот слой ведет себя, когда окрашен (в предмете с тегом `#dyeable` и с компонентом `dyed_color`).",
	"::java::assets::equipment::Layer.texture": "Местоположение текстуры для этого слоя внутри `entity/equipment/<layer>/`.",
	"::java::assets::equipment::WingsLayer.use_player_texture": "Должна ли эта текстура слоя быть переопределена пользовательской текстурой элитр игрока.\nЗначение по умолчанию: `false`.",
	"::java::assets::font::UnihexOverrideRange.from": "Минимум в диапазоне кодовых точек (включительно).",
	"::java::assets::font::UnihexOverrideRange.to": "Максимум в диапазоне кодовых точек (включительно).",
	"::java::assets::font::UnihexProvider.hex_file": "ZIP архив с одним или более *.hex файлами (файлы в архиве с другими расширениями игнорируются).",
	"::java::assets::font::UnihexProvider.size_overrides": "Список диапазонов, размер которых надо изменить.",
	"::java::assets::item_definition::Chest.openness": "По умолчанию: `0`.",
	"::java::assets::item_definition::Compass.wobble": "Будет ли колебаться некоторое время вокруг цели перед стабилизацией. Значение по умолчанию: true.",
	"::java::assets::item_definition::CompassTarget.Lodestone": "Указывает на местоположение, указанное в компоненте `lodestone_tracker`.",
	"::java::assets::item_definition::CompassTarget.None": "Всегда не валидная цель.",
	"::java::assets::item_definition::CompassTarget.Recovery": "Показывает на последнюю точку смерти игрока.",
	"::java::assets::item_definition::CompassTarget.Spawn": "Показывает на спавн.",
	"::java::assets::item_definition::ComponentFlags.predicate": "Предикат компонента для проверки.",
	"::java::assets::item_definition::ComponentStrings.component": "Тип компонента, значения которого нужно проверить.\nЕсли выбранное значение взято из реестра, к которому у клиента нет доступа,\nзапись будет проигнорирована.",
	"::java::assets::item_definition::ConstantTint.value": "Постоянный оттенок цвета для применения.",
	"::java::assets::item_definition::Count.normalize": "Если false, возвращает количество, ограниченное значениями `0..max_stack_size`.\nЕсли true, возвращает количество, деленное на компонент `max_stack_size`, ограниченное значениями `0..1`.\nПо умолчанию true.",
	"::java::assets::item_definition::CustomModelDataFlags.index": "Индекс списка `flags` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataFloats.index": "Индекс списка `floats` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataStrings.index": "Индекс списка `strings` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataTint.default": "Оттенок, применяемый, когда компонент `custom_model_data` отсутствует или когда в указанном индексе нет цвета.",
	"::java::assets::item_definition::CustomModelDataTint.index": "Индекс списка `colors` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::Damage.normalize": "Если false, возвращает значение урона, ограниченное значениями `0..max_damage`.\nЕсли true, возвращает значение урона, деленное на компонент `max_damage`, ограниченное значениями `0..1`.\nПо умолчанию true.",
	"::java::assets::item_definition::DyeTint.default": "Оттенок, применяемый при отсутствии компонента `dyed_color`.",
	"::java::assets::item_definition::FireworkTint.default": "Оттенок, применяемый при отсутствии компонента `firework_explosion`.",
	"::java::assets::item_definition::Head.animation": "Управляет временем анимации голов пиглина и дракона. Значение по умолчанию — «0».",
	"::java::assets::item_definition::Head.texture": "Текстура, которую использовать вместо текстуры из `kind`.",
	"::java::assets::item_definition::ItemDefinition.hand_animation_on_swap": "Нужно ли воспроизводить анимацию «вниз-вверх» в режиме от первого лица при изменении количества предметов в стаке.\nЗначение по умолчанию: `true`.",
	"::java::assets::item_definition::ItemDefinition.oversized_in_gui": "Допустимо ли, чтобы модель предмета была больше размера слота.\nЗначение по умолчанию — `false`, что привязывает модель предмета в GUI к размеру слота предмета.\nПоведение `true` официально **не** поддерживается."
}
