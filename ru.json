{
	"::java::assets::atlas::Atlas.sources": "Список источников спрайтов, которые могут добавлять или удалять текстуры спрайтов в этот атлас.",
	"::java::assets::atlas::Directory.prefix": "Префикс в имени спрайта, обычно заканчивается `/`.",
	"::java::assets::atlas::Directory.source": "Директория, где находятся текстуры, включить, относительно папки `textures`, не включая завершающий `/`.",
	"::java::assets::atlas::PalettedPermutations.separator": "Значение, используемое при объединении имён текстуры и изменения для получения имени спрайта.\nПо умолчанию `_`.",
	"::java::assets::atlas::Single.resource": "Местоположение источника одной текстуры .",
	"::java::assets::atlas::Single.sprite": "Идентификатор спрайта, на который можно ссылаться.\nЕсли не указан, равен `resource`.",
	"::java::assets::atlas::Unstitch.divisor_x": "Если задана ширина ресурса, регионы будут использовать пиксельные координаты.",
	"::java::assets::atlas::Unstitch.divisor_y": "Если задана высота ресурса, регионы будут использовать пиксельные координаты.",
	"::java::assets::block_state_definition::BlockStateDefinitionMultipartEntry.when": "Одно условие или список, как минимум с одним условием.",
	"::java::assets::block_state_definition::ModelVariantBase.uvlock": "Если установлено значение `true`, текстура не поворачивается вместе с блоком.",
	"::java::assets::equipment::Dyeable.color_when_undyed": "Если указано, этот слой будет окрашен в цвет, содержащийся в компоненте `dyed_color`.\nЕсли элемент не подлежит окрашиванию или не окрашен, он будет окрашен в этот цвет.\nЕсли не указано и элемент не окрашен, слой будет скрыт.",
	"::java::assets::equipment::Equipment.layers": "Список слоев для каждого типа слоя модели.",
	"::java::assets::equipment::Layer.dyeable": "Настраивает, как этот слой ведет себя, когда окрашен (в предмете с тегом `#dyeable` и с компонентом `dyed_color`).",
	"::java::assets::equipment::Layer.texture": "Местоположение текстуры для этого слоя внутри `entity/equipment/<layer>/`.",
	"::java::assets::equipment::WingsLayer.use_player_texture": "Должна ли эта текстура слоя быть переопределена пользовательской текстурой элитр игрока.\nЗначение по умолчанию: `false`.",
	"::java::assets::font::UnihexOverrideRange.from": "Минимум в диапазоне кодовых точек (включительно).",
	"::java::assets::font::UnihexOverrideRange.to": "Максимум в диапазоне кодовых точек (включительно).",
	"::java::assets::font::UnihexProvider.hex_file": "ZIP архив с одним или более *.hex файлами (файлы в архиве с другими расширениями игнорируются).",
	"::java::assets::font::UnihexProvider.size_overrides": "Список диапазонов, размер которых надо изменить.",
	"::java::assets::item_definition::Chest.openness": "По умолчанию: `0`.",
	"::java::assets::item_definition::Compass.wobble": "Будет ли колебаться некоторое время вокруг цели перед стабилизацией. Значение по умолчанию: true.",
	"::java::assets::item_definition::CompassTarget.Lodestone": "Указывает на местоположение, указанное в компоненте `lodestone_tracker`.",
	"::java::assets::item_definition::CompassTarget.None": "Всегда не валидная цель.",
	"::java::assets::item_definition::CompassTarget.Recovery": "Показывает на последнюю точку смерти игрока.",
	"::java::assets::item_definition::CompassTarget.Spawn": "Показывает на спавн.",
	"::java::assets::item_definition::ComponentFlags.predicate": "Предикат компонента для проверки.",
	"::java::assets::item_definition::ComponentStrings.component": "Тип компонента, значения которого нужно проверить.\nЕсли выбранное значение взято из реестра, к которому у клиента нет доступа,\nзапись будет проигнорирована.",
	"::java::assets::item_definition::ConstantTint.value": "Постоянный оттенок цвета для применения.",
	"::java::assets::item_definition::Count.normalize": "Если false, возвращает количество, ограниченное значениями `0..max_stack_size`.\nЕсли true, возвращает количество, деленное на компонент `max_stack_size`, ограниченное значениями `0..1`.\nПо умолчанию true.",
	"::java::assets::item_definition::CustomModelDataFlags.index": "Индекс списка `flags` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataFloats.index": "Индекс списка `floats` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataStrings.index": "Индекс списка `strings` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::CustomModelDataTint.default": "Оттенок, применяемый, когда компонент `custom_model_data` отсутствует или когда в указанном индексе нет цвета.",
	"::java::assets::item_definition::CustomModelDataTint.index": "Индекс списка `colors` в компоненте `custom_model_data`. По умолчанию 0.",
	"::java::assets::item_definition::Damage.normalize": "Если false, возвращает значение урона, ограниченное значениями `0..max_damage`.\nЕсли true, возвращает значение урона, деленное на компонент `max_damage`, ограниченное значениями `0..1`.\nПо умолчанию true.",
	"::java::assets::item_definition::DyeTint.default": "Оттенок, применяемый при отсутствии компонента `dyed_color`.",
	"::java::assets::item_definition::FireworkTint.default": "Оттенок, применяемый при отсутствии компонента `firework_explosion`.",
	"::java::assets::item_definition::Head.animation": "Управляет временем анимации голов пиглина и дракона. Значение по умолчанию — «0».",
	"::java::assets::item_definition::Head.texture": "Текстура, которую использовать вместо текстуры из `kind`.",
	"::java::assets::item_definition::ItemDefinition.hand_animation_on_swap": "Нужно ли воспроизводить анимацию «вниз-вверх» в режиме от первого лица при изменении количества предметов в стаке.\nЗначение по умолчанию: `true`.",
	"::java::assets::item_definition::ItemDefinition.oversized_in_gui": "Допустимо ли, чтобы модель предмета была больше размера слота.\nЗначение по умолчанию — `false`, что привязывает модель предмета в GUI к размеру слота предмета.\nПоведение `true` официально **не** поддерживается.",
	"::java::world::entity::mob::zombie::ZombieVillager.ConversionTime": "Количество тиков для превращения.",
	"::java::world::entity::mob::zombie::ZombieVillager.Gossips": "Хмыканья жителя",
	"::java::world::entity::mob::zombie::ZombieVillager.Offers": "Предложения жителя",
	"::java::world::entity::mob::zombie::ZombieVillager.VillagerData": "Данные скина жителя",
	"::java::world::entity::mob::zombified_piglin::ZombiePigman.Anger": "Количество тиков для агрессии к чему-либо.",
	"::java::world::entity::mob::zombified_piglin::ZombiePigman.HurtBy": "Последний игрок, попавший в зомби-пиглина в зоне обнаружения этого зомби-пиглина.",
	"::java::world::entity::mob::zombified_piglin::ZombiePigman.IsBaby": "Если это ребенок.",
	"::java::world::entity::painting::Painting.facing": "Направление взгляда.",
	"::java::world::entity::painting::Painting.Facing": "Направление взгляда.",
	"::java::world::entity::painting::Painting.Motive": "Мотив картины.",
	"::java::world::entity::painting::Painting.variant": "Вариант картины.",
	"::java::world::entity::projectile::arrow::Arrow.Color": "Цвет частиц пузырьков эффекта, идущих от трассера стрелы.\nвычисляется как \"RED << 16 | GREEN << 8 | BLUE\". Каждое из этих полей должно содержать значение от 0 до 255 включительно.",
	"::java::world::entity::projectile::arrow::Arrow.custom_potion_effects": "Эффект при попадании в сущность.",
	"::java::world::entity::projectile::arrow::Arrow.CustomPotionEffects": "Эффект при попадании в сущность.",
	"::java::world::entity::projectile::arrow::Arrow.Potion": "Название обычного эффекта зелья.",
	"::java::world::entity::projectile::arrow::ArrowBase.crit": "Когда должно наносить крит. урон.",
	"::java::world::entity::projectile::arrow::ArrowBase.damage": "Какой урон оно должно получить.",
	"::java::world::entity::projectile::arrow::ArrowBase.inBlockState": "Блок, в котором он находится.",
	"::java::world::entity::projectile::arrow::ArrowBase.inGround": "Если находится на земле.",
	"::java::world::entity::projectile::arrow::ArrowBase.life": "Количество тиков с последнего движения.",
	"::java::world::entity::projectile::arrow::ArrowBase.OwnerUUIDLeast": "Нижние биты владельца UUID.",
	"::java::world::entity::projectile::arrow::ArrowBase.OwnerUUIDMost": "Верхние биты владельца UUID.",
	"::java::world::entity::projectile::arrow::ArrowBase.pickup": "То как игрок поднимет это.",
	"::java::world::entity::projectile::arrow::ArrowBase.PierceLevel": "Количество сущностей через которое оно пролетит.",
	"::java::world::entity::projectile::arrow::ArrowBase.player": "Когда игрок стреляет этим.",
	"::java::world::entity::projectile::arrow::ArrowBase.shake": "Создаёт тряску.",
	"::java::world::entity::projectile::arrow::ArrowBase.ShotFromCrossbow": "Когда выстреливается из арбалета.",
	"::java::world::entity::projectile::arrow::ArrowBase.SoundEvent": "Звуковой ивент когда попадает по кому-то.\n\nТолько ванильные звуки",
	"::java::world::entity::projectile::arrow::ArrowBase.weapon": "Предмет из которого выстрелили этой стрелой.",
	"::java::world::entity::projectile::arrow::SpectralArrow.Duration": "Количество тиков через которое исчезнет эффект свечения.",
	"::java::world::entity::tnt::Tnt.fuse": "Количество тиков до того как это взорвётся.",
	"::java::world::entity::tnt::Tnt.Fuse": "Количество тиков до того как это взорвётся.",
	"::java::world::entity::tnt::Tnt.owner": "Сущность что подожгла этот динамит.",
	"::java::world::item::AttributeModifier": "Одиночный модификатор атрибута.",
	"::java::world::item::AttributeModifier.Amount": "Количество в атрибуте.",
	"::java::world::item::AttributeModifier.Name": "ID модификатора, не имеет влияния ни на что.",
	"::java::world::item::AttributeModifier.Slot": "Слот в котором модификатор будет активен.",
	"::java::world::item::AttributeModifier.UUIDLeast": "Нижние биты UUID модификатора.",
	"::java::world::item::AttributeModifier.UUIDMost": "Верхние биты UUID модификатора.",
	"::java::world::item::BlockItem.BlockStateTag": "Состояние блока когда его поставят.",
	"::java::world::item::book::WrittenBook.generation": "Происхождение книги. 0 = оригинал, 1 = копия оригинала, 2 = копия копии, 3 = ветхая.",
	"::java::world::item::book::WrittenBook.pages": "Страницы книги в виде текстовых компонентов JSON.",
	"::java::world::item::book::WrittenBook.resolved": "Использован ли был динамический контент на странице.",
	"::java::world::item::compass::Compass.LodestoneTracked": "Когда компасс должен быть линкован к магнетиту.\nЕсли true, компасс скинет линковку если магнетита не будет на указанной позиции.",
	"::java::world::item::crossbow::Crossbow.Charged": "Заряжен ли арбалет.",
	"::java::world::item::crossbow::Crossbow.ChargedProjectiles": "Снаряд, что заряжен в арбалет.",
	"::java::world::item::Display": "Настройки отображения для этого предмета.",
	"::java::world::item::Display.Lore": "Список текстовых JSON компонентов, для каждой линии описания.",
	"::java::world::item::Display.Name": "Текстовый JSON компонент.",
	"::java::world::item::Enchantment": "Определённое зачарование, с ID и уровнем.",
	"::java::world::item::Enchantment.id": "Что за зачарование будет отображаться.",
	"::java::world::item::Enchantment.lvl": "Определяет уровень зачарования.",
	"::java::world::item::firework::Explosion.Colors": "Цвета взрыва.\nРассчитывается как `RED << 16 | GREEN << 8 | BLUE`. Каждое из этих полей должно иметь значение от 0 до 255 включительно.",
	"::java::world::item::firework::Explosion.FadeColors": "Цвета переливов взрыва.\nРассчитывается как `RED << 16 | GREEN << 8 | BLUE`. Каждое из этих полей должно иметь значение от 0 до 255 включительно.",
	"::java::world::item::firework::Explosion.Flicker": "Должен ли взрыв мерцать.",
	"::java::world::item::firework::Explosion.Trail": "Должен ли взрыв оставлять трассер.",
	"::java::world::item::firework::Fireworks.Flight": "Время полёта.",
	"::java::world::item::fish_bucket::AxolotlBucket.BucketVariantTag": "Превращается в `Variant`тег сущности.",
	"::java::world::item::head::SkullOwner.Id": "Опционально.",
	"::java::world::item::head::SkullOwner.Name": "Имя владельца, если нет - будет скин Стива.",
	"::java::world::item::head::Texture.Value": "Значение индекса текстуры в JSON зашифрованное в Base64.",
	"::java::world::item::ItemBase.[string]": "NBT теги кастомного предмета",
	"::java::world::item::ItemBase.AttributeModifiers": "Применяется к сущности, которая надела этот предмет.",
	"::java::world::item::ItemBase.CanDestroy": "Список состояний блоков что могут быть разрушены этим предметом в режиме Приключений.",
	"::java::world::item::ItemBase.CanPlaceOn": "Список состояний блоков на которые может быть поставлен этот предмет-блок.",
	"::java::world::item::ItemBase.CustomModelData": "Тег что описывает кастомную модель которую получит предмет.\nИспользуется `custom_model_data`предикат модели.\nИмеет определенные ограничения из-за преобразования с плавающей точкой.",
	"::java::world::item::ItemBase.Damage": "Наносимый предмету урон. Используется только для инструментов, брони и т.д.",
	"::java::world::item::ItemBase.display": "Настройки отображения.",
	"::java::world::item::ItemBase.Enchantments": "Список зачарований на этом предмете.",
	"::java::world::item::ItemBase.HideFlags": "Битовое число определяющее какие флаги будут спрятаны на предмете.",
	"::java::world::item::ItemBase.RepairCost": "Количество уровней, добавляемых к стоимости базового уровня при ремонте, объединении или переименовании этого предмета с помощью наковальни.",
	"::java::world::item::ItemBase.Trim": "Отделка брони что будет нанесена на этот предмет.",
	"::java::world::item::ItemBase.Unbreakable": "Когда предмет должен быть неразрушимым.\nТолько для инструментов, брони, и т.д.",
	"::java::world::item::leather_armor::ColorDisplay.color": "Цвет брони.\nВычисляется как `RED << 16 | GREEN << 8 | BLUE`. Каждое из этих полей должно содержать значение от 0 до 255 включительно.",
	"::java::world::item::map::ColorDisplay.MapColor": "Вычисляется как `RED << 16 | GREEN << 8 | BLUE`. Каждое из этих полей должно содержать значение от 0 до 255 включительно.",
	"::java::world::item::map::Decoration.rot": "Поворот декорации, измеряемый в градусах по часовой стрелке.",
	"::java::world::item::map::Decoration.type": "Тип декорации.",
	"::java::world::item::map::Decoration.x": "Мировая X.",
	"::java::world::item::map::Decoration.z": "Мировая Z.",
	"::java::world::item::map::FilledMap.Decorations": "Декорации на карте.",
	"::java::world::item::map::FilledMap.Decorations.id": "Произвольная уникальная строка, идентифицирующая декорацию.",
	"::java::world::item::map::FilledMap.display": "Отображение для этого предмета.",
	"::java::world::item::map::FilledMap.display.MapColor": "Вычисляется как `RED << 16 | GREEN << 8 | BLUE`. Каждое из этих полей должно содержать значение от 0 до 255 включительно.",
	"::java::world::item::map::FilledMap.map": "Номер карты, представляющий общее состояние, содержащее содержимое карты и маркеры.",
	"::java::world::item::map::FilledMap.map_scale_direction": "Количество, на которое можно увеличить текущий масштаб карты при создании.",
	"::java::world::item::map::FilledMap.map_to_lock": "Следует ли заблокировать карту после извлечения из стола картографа.",
	"::java::world::item::map::IconByteId.BlueMarker": "Синий пятиугольник.",
	"::java::world::item::map::IconByteId.Frame": "Зелёный пятиугольник.",
	"::java::world::item::map::IconByteId.Mansion": "Лесной особняк.",
	"::java::world::item::map::IconByteId.Monument": "Океанический монумент.",
	"::java::world::item::map::IconByteId.Player": "Белый пятиугольник.",
	"::java::world::item::map::IconByteId.PlayerOffLimits": "Маленькая белая точка.",
	"::java::world::item::map::IconByteId.PlayerOffMap": "Большая белая точка.",
	"::java::world::item::map::IconByteId.RedMarker": "Красный пятиугольник.",
	"::java::world::item::map::IconByteId.TargetPoint": "Красный треугольник.",
	"::java::world::item::map::IconByteId.TargetX": "Белый крест.",
	"::java::world::item::map::IdentifiedDecoration.id": "Произвольная уникальная строка, идентифицирующая декорацию.",
	"::java::world::item::potion::EffectItem.custom_potion_effects": "Список эффектов, которые будут применены с помощью этого предмета.",
	"::java::world::item::potion::EffectItem.CustomPotionColor": "Вычисляется как \"RED << 16 | GREEN << 8 | BLUE\". Каждое из этих полей должно содержать значение от 0 до 255 включительно.",
	"::java::world::item::potion::EffectItem.CustomPotionEffects": "Список эффектов, которые будут применены с помощью этого предмета.",
	"::java::world::item::potion::EffectItem.Potion": "Обычный эффект зелья",
	"::java::world::item::shield::BlockEntityTag.Base": "Базовый цвет.",
	"::java::world::item::shield::Shield.BlockEntityTag": "Данные Флага.",
	"::java::world::item::shield::Shield.BlockEntityTag.Base": "Базовый цвет.",
	"::java::world::item::SingleItemOfComponent.id": "ID предмета.",
	"::java::world::item::spawn_item::SpawnItem.EntityTag": "Дата созданной сущности.",
	"::java::world::item::suspicious_stew::Effect": "Эффект Подозрительного рагу.",
	"::java::world::item::suspicious_stew::Effect.EffectDuration": "Длительность в тиках.",
	"::java::world::item::suspicious_stew::SuspiciousStew.Effects": "Эффект что даст это рагу."
}
