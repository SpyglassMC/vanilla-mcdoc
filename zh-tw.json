{
	"::java::assets::atlas::Atlas.sources": "要加入或移出此圖集的材質的列表。",
	"::java::assets::atlas::Directory.prefix": "這個材質ID的前綴，通常以`/`結尾。",
	"::java::assets::atlas::Directory.source": "資料夾相對於`textures`的路徑，不包含結尾的`/`。",
	"::java::assets::atlas::Filter.pattern": "從圖集移出指定的材質。只會移出在前面被加入的材質。",
	"::java::assets::atlas::PalettedPermutations.separator": "用以連接材質名稱和排列名稱，並產生圖標名稱的符號。\n預設值`_`。",
	"::java::assets::atlas::Single.resource": "單一材質的位置。",
	"::java::assets::atlas::Single.sprite": "在遊戲中的材質ID。\n如果沒有指定，預設和`resource`相同。",
	"::java::assets::atlas::Unstitch.divisor_x": "指定為`resource`來源材質的寬度時，`regions`的座標單位會是像素。",
	"::java::assets::atlas::Unstitch.divisor_y": "指定為`resource`來源材質的高度時，`regions`的座標單位會是像素。",
	"::java::assets::block_state_definition::BlockStateDefinitionMultipartEntry.when": "一個條件，或使用「或」邏輯的條件陣列。",
	"::java::assets::block_state_definition::ModelVariantBase.uvlock": "設定為`true`時，材質不會跟著方塊旋轉。",
	"::java::assets::credits::Credits.section": "公司所屬的段落。",
	"::java::assets::credits::CreditsCompanySegment.section": "公司所屬的段落。",
	"::java::assets::credits::CreditsJobTitle.names": "職稱為`title`的員工名稱。",
	"::java::assets::equipment::Dyeable.color_when_undyed": "這個圖層會優先使用`dyed_color`元件指定的顏色。\n如果物品不可染色或沒有染色，則使用此欄位指定的預設顏色。\n如果沒有指定此欄位，且物品不可染色或沒有染色，則隱藏這個圖層。",
	"::java::assets::equipment::Equipment.layers": "各個裝備部位的圖層列表。",
	"::java::assets::equipment::Layer.dyeable": "指定這個圖層在染色時（在`#dyeable`標籤中，且有`dyed_color`元件）的表現。",
	"::java::assets::equipment::Layer.texture": "這個圖層使用的材質ID（在`entity/equipment/<部位>/`資料夾中）。",
	"::java::assets::equipment::WingsLayer.use_player_texture": "指定這個鞘翅圖層是否要用玩家的披風材質覆蓋。\n預設值`false`。",
	"::java::assets::font::UnihexOverrideRange.from": "碼位範圍的最小值（範圍包含這個值）。",
	"::java::assets::font::UnihexOverrideRange.left": "字形最左直行的位置。",
	"::java::assets::font::UnihexOverrideRange.right": "字形最右直行的位置。",
	"::java::assets::font::UnihexOverrideRange.to": "碼位範圍的最大值（範圍包含這個值）。",
	"::java::assets::font::UnihexProvider.hex_file": "包含至少一個*.hex檔案的壓縮檔（壓縮檔內使用其他附檔名的檔案會被忽略）。",
	"::java::assets::font::UnihexProvider.size_overrides": "設定使用非預設的寬度的文字。",
	"::java::assets::item_definition::Chest.openness": "預設值`0`。",
	"::java::assets::item_definition::Compass.wobble": "數值是否要先擺盪一段時間後，才停留在正確的值。預設值`true`。",
	"::java::assets::item_definition::CompassTarget.Lodestone": "指向儲存在`lodestone_tracker`元件的位置。",
	"::java::assets::item_definition::CompassTarget.None": "指向不存在的位置。",
	"::java::assets::item_definition::CompassTarget.Recovery": "指向玩家最後死亡的位置。",
	"::java::assets::item_definition::CompassTarget.Spawn": "指向世界重生點。",
	"::java::assets::item_definition::ComponentFlags.predicate": "需要檢查的組件述詞。",
	"::java::assets::item_definition::ComponentFlags.value": "謂詞特定的值。",
	"::java::assets::item_definition::ComponentStrings.component": "要檢查其值的組件類型。\n如果所選值來自客戶端無法訪問的註冊表，\n則該條目將被靜默忽略。",
	"::java::assets::item_definition::ConstantTint.value": "用於塗色的顏色。",
	"::java::assets::item_definition::Count.normalize": "設定為`false`時，回傳物品的數量。\n設定為`true`時，回傳物品數量佔最大堆疊數的比例（範圍是`0..1`）。\n預設值`true`。",
	"::java::assets::item_definition::CustomModelDataFlags.index": "`custom_model_data`元件中`flags`列表的索引值。預設值`0`。",
	"::java::assets::item_definition::CustomModelDataFloats.index": "`custom_model_data`元件中`floats`列表的索引值。預設值`0`。",
	"::java::assets::item_definition::CustomModelDataStrings.index": "`custom_model_data`元件中`strings`列表的索引值。預設值`0`。",
	"::java::assets::item_definition::CustomModelDataTint.default": "當`custom_model_data`元件不存在，或指定索引的顏色不存在時，要使用的預設顏色。",
	"::java::assets::item_definition::CustomModelDataTint.index": "`custom_model_data`元件中`colors`列表的索引值。預設值`0`。",
	"::java::assets::item_definition::Damage.normalize": "設定為`false`時，回傳已損的耐久值。\n設定為`true`時，回傳已損的耐久比例（範圍是`0..1`）。\n預設值`true`。",
	"::java::assets::item_definition::DyeTint.default": "當`dyed_color`元件不存在時使用的預設顏色。",
	"::java::assets::item_definition::FireworkTint.default": "當`firework_explosion`元件不存在時使用的預設顏色。",
	"::java::assets::item_definition::HasComponent.ignore_default": "元件使用預設值時，是否視為「元件不存在」。預設值`false`。",
	"::java::assets::item_definition::Head.animation": "控制豬布林頭顱和龍首的動畫畫格。預設值`0`。",
	"::java::assets::item_definition::Head.texture": "使用指定的材質替代`kind`欄位決定的預設材質。\n這個材質的優先度高於`profile`指定的玩家Skin。",
	"::java::assets::item_definition::ItemDefinition.hand_animation_on_swap": "切換到這個物品時，是否會讓手向下再向上擺動。\n預設值`true`。",
	"::java::assets::item_definition::KeybindDown.keybind": "測試的控制鍵ID。",
	"::java::assets::item_definition::LocalTime.locale": "預設使用\"root\"區域格式。\n範例：`en_US`、`es_AU@numbers=thai;calendar=japanese`。",
	"::java::assets::item_definition::LocalTime.pattern": "時間的格式。\n範例：`yyyy-MM-dd`、`HH:mm:ss`。",
	"::java::assets::item_definition::LocalTime.time_zone": "預設使用客戶端的電腦時區。\n範例：`Europe/Stockholm`、`GMT+0:45`。",
	"::java::assets::item_definition::MapColorTint.default": "當`map_color`元件不存在時使用的預設顏色。",
	"::java::assets::item_definition::PotionTint.default": "當`potion_contents`元件不存在，或沒有任何藥水效果且未指定`custom_color`時，要使用的預設顏色。",
	"::java::assets::item_definition::RangeDispatch.entries": "測試範圍的列表。會從符合「測試數值 ≥ `threshold`」的模型中，選擇`threshold`最大的那個。\n順序不重要，Minecraft在載入這個列表的時候，會按照`threshold`把列表由小到大重新排序。",
	"::java::assets::item_definition::RangeDispatch.fallback": "當沒有任何測試通過時使用的物品模型。",
	"::java::assets::item_definition::RangeDispatch.scale": "測試數值的倍率，預設值`1`。",
	"::java::assets::item_definition::Select.fallback": "當沒有任何測試通過時使用的物品模型。",
	"::java::assets::item_definition::ShulkerBox.orientation": "預設值`up`。",
	"::java::assets::item_definition::Special.base": "物品模型，用於提供變形、粒子、GUI光源等參數。",
	"::java::assets::item_definition::Special.model": "繪製寫死在遊戲內的特殊模型。",
	"::java::assets::item_definition::TeamTint.default": "當參照實體不存在、參照實體沒有隊伍，或參照實體的隊伍沒有顏色時，要使用的預設顏色。",
	"::java::assets::item_definition::Time.wobble": "數值是否要先擺盪一段時間後，才停留在正確的值。預設值`true`。",
	"::java::assets::item_definition::UseCycle.period": "回傳剩餘使用時間（刻）除以`period`的餘數。\n預設值`1`。",
	"::java::assets::item_definition::UseDuration.remaining": "設定為`true`時，回傳物品剩餘的使用時間（刻）。\n設定為`false`時，回傳物品已經使用的時間（刻）。\n預設值`false`。",
	"::java::assets::lang::LangDeprecated.removed": "移除的翻譯鍵。",
	"::java::assets::lang::LangDeprecated.renamed": "重新命名的翻譯鍵，把舊名稱對應到新名稱。",
	"::java::assets::model::ModelElementRotation.rescale": "預設值`false`。",
	"::java::assets::model::Predicates.HoneyLevel": "蜂窩和蜂箱的蜂蜜儲量。",
	"::java::assets::model::Predicates.Level": "光源（物品）的亮度等級。",
	"::java::assets::model::Predicates.Throwing": "三叉戟是否正在使用中。",
	"::java::assets::model::Predicates.Tooting": "山羊角是否正在使用中。",
	"::java::assets::regional_compliancies::Notification": "區域代碼。",
	"::java::assets::shader::program::Defines.flags": "在檔案頂端以`#define <key>`形式插入的旗標。",
	"::java::assets::shader::program::Defines.values": "在檔案頂端以`#define <key> <value>`形式插入的數值替換。",
	"::java::assets::shader::program::ShaderProgram.blend": "未使用。",
	"::java::assets::shader::program::ShaderProgram.defines": "定義插入檔案頂端的GLSL提示詞。",
	"::java::assets::sounds::Sound.attenuation_distance": "指定聲音衰減的距離。預設值`16`。",
	"::java::assets::sounds::Sound.pitch": "預設值`1.0`。",
	"::java::assets::sounds::Sound.preload": "聲音是否在資源包載入時就預先載入，而不是在播放時才載入。用於水下環境音效。預設值`false`。",
	"::java::assets::sounds::Sound.stream": "設定為`true`時，這個音效使用檔案串流模式播放。長音效應該啟用這個選項以避免lag。預設值`false`。\n設定為`false`時，可以同時播放很多相同的音效。設定為`true`時，只能同時播放4個同類型的音效。",
	"::java::assets::sounds::Sound.type": "指定`name`指向的目標種類。預設值`sound`。",
	"::java::assets::sounds::Sound.volume": "預設值`1.0`。",
	"::java::assets::sounds::Sound.weight": "這個音效的權重。預設值`1`。",
	"::java::assets::sounds::SoundEventRegistration.replace": "設定為`true`時，同名聲音事件的音效列表會被這個列表覆蓋。\n設定為`false`時，同名聲音事件的音效列表會合併。預設值`false`。",
	"::java::assets::sounds::SoundEventRegistration.sounds": "這個聲音事件使用的音效。事件觸發時，從列表中隨機抽選一個音效播放。",
	"::java::assets::sounds::SoundEventRegistration.subtitle": "聲音的字幕。支援`§`文字格式。",
	"::java::assets::sounds::SoundType.File": "指向聲音檔案。",
	"::java::assets::sounds::SoundType.SoundEvent": "指向另一個聲音事件。",
	"::java::data::advancement::Advancement.criteria": "如果沒有指定`requirements`，所有定義的條件都要達成。",
	"::java::data::advancement::Advancement.display": "欄位存在時，能在介面中查看這個進度。",
	"::java::data::advancement::Advancement.parent": "如果這個欄位不存在，這個進度會被當成根進度。\n循環引用會導致載入失敗。",
	"::java::data::advancement::Advancement.requirements": "包含所有的`criteria`條件名稱。\n預設行為是所有條件都要符合。\n格式是包含「條件名稱的列表」的列表，所有條件都要引用至少一次。\n外層的列表使用「且」邏輯，內層的列表使用「或」邏輯。也就是說，當每個「條件列表」都有至少一項條件符合時，完成進度。",
	"::java::data::advancement::Advancement.rewards": "進度完成時，玩家獲得的獎勵。",
	"::java::data::advancement::Advancement.sends_telemetry_event": "是否傳送遙測資料。預設值`false`。只對`minecraft:`命名空間的進度有效。",
	"::java::data::advancement::AdvancementCriterion.trigger": "很多觸發條件能在一刻內觸發多次（如果進度在獎勵函數中被撤銷，重新進入可完成的狀態）。",
	"::java::data::advancement::AdvancementDisplay.announce_to_chat": "進度完成時，是否向聊天欄公告。預設值`true`。",
	"::java::data::advancement::AdvancementDisplay.background": "進度頁面的設定（僅限根進度）。",
	"::java::data::advancement::AdvancementDisplay.frame": "進度在介面中顯示的外框類型。預設值`task`。",
	"::java::data::advancement::AdvancementDisplay.hidden": "這個進度未完成時，是否在進度介面中隱藏（同時會隱藏未完成的後續進度）。\n對根進度本身無效，但會正常影響根進度的後續進度。\n預設值`false`。",
	"::java::data::advancement::AdvancementDisplay.show_toast": "進度完成時，是否在右上角顯示彈窗。預設值`true`。",
	"::java::data::advancement::AdvancementFrame.Challenge": "「挑戰」進度外框（例：探險時光）。",
	"::java::data::advancement::AdvancementFrame.Goal": "「目標」進度外框（例：殭屍醫生）。",
	"::java::data::advancement::AdvancementFrame.Task": "普通的進度外框。",
	"::java::data::advancement::AdvancementRewards.experience": "獲得的經驗值。",
	"::java::data::advancement::AdvancementRewards.function": "執行的函數，`@s`是玩家，但`~ ~ ~`不是玩家位置。不能指定函數標籤。",
	"::java::data::advancement::AdvancementRewards.loot": "獲得的戰利品表。",
	"::java::data::advancement::AdvancementRewards.recipes": "獲得的合成配方。",
	"::java::data::advancement::predicate::DamagePredicate.blocked": "傷害是否成功被格擋。",
	"::java::data::advancement::predicate::DamagePredicate.dealt": "發動的傷害（計算傷害防禦前）。",
	"::java::data::advancement::predicate::DamagePredicate.source_entity": "傷害的源頭（例：射出箭矢的骷髏、點燃TNT的玩家）。",
	"::java::data::advancement::predicate::DamagePredicate.taken": "受到的傷害（計算傷害防禦後）。",
	"::java::data::advancement::predicate::DamagePredicate.type": "傷害的類型。",
	"::java::data::advancement::predicate::DamageSourcePredicate.direct_entity": "直接的傷害來源（例：骷髏射出的箭矢、玩家點燃的TNT）。",
	"::java::data::advancement::predicate::DamageSourcePredicate.is_direct": "當傷害源頭和直接傷害來源是同一個實體時，視為直接傷害。",
	"::java::data::advancement::predicate::DamageSourcePredicate.source_entity": "傷害的源頭（例：射出箭矢的骷髏、點燃TNT的玩家）。",
	"::java::data::advancement::predicate::DamageSourcePredicate.tags": "測試傷害類型標籤。",
	"::java::data::advancement::predicate::DamageTagPredicate.expected": "傷害類型是否應該包含於指定的標籤中。",
	"::java::data::advancement::predicate::DamageTagPredicate.id": "標籤ID。",
	"::java::data::advancement::predicate::EntityPredicate.movement_affected_by": "實體下方能影響實體移動的方塊（例：玩家踩著的靈魂砂）。",
	"::java::data::advancement::predicate::EntityPredicate.periodic_tick": "每N刻週期性的通過一次測試。",
	"::java::data::advancement::predicate::EntityPredicate.targeted_entity": "生物AI仇恨指向的目標。",
	"::java::data::advancement::predicate::LocationPredicate.can_see_sky": "這個位置是否能看見天空（有最大的天空亮度）。",
	"::java::data::advancement::predicate::LocationPredicate.light": "取時間亮度和方塊亮度的最大值。",
	"::java::data::advancement::predicate::LocationPredicate.smokey": "方塊是否在任一種營火上方5格內。",
	"::java::data::advancement::predicate::PlayerPredicate.input": "測試玩家按壓的移動控制鍵。",
	"::java::data::advancement::predicate::PlayerPredicate.level": "等級。",
	"::java::data::advancement::predicate::TropicalFishPredicate.variant": "熱帶魚的類型。",
	"::java::data::advancement::trigger::BeeNestDestroyed.item": "用於破壞方塊的物品。",
	"::java::data::advancement::trigger::BeeNestDestroyed.num_bees_inside": "破壞蜂窩、蜂箱前，裡面的蜜蜂數量。",
	"::java::data::advancement::trigger::ConstructBeacon.level": "更新的烽火台底座等級。",
	"::java::data::advancement::trigger::DefaultBlockUse.location": "方塊的位置。",
	"::java::data::advancement::trigger::FishingRodHooked.entity": "被勾住的實體。",
	"::java::data::advancement::trigger::FishingRodHooked.item": "釣起的物品。",
	"::java::data::advancement::trigger::FishingRodHooked.rod": "釣竿。",
	"::java::data::advancement::trigger::InventoryChangedSlots.empty": "背包中沒物品的欄位數。",
	"::java::data::advancement::trigger::InventoryChangedSlots.full": "背包中裝滿（數量達到堆疊上限）的欄位數。",
	"::java::data::advancement::trigger::InventoryChangedSlots.occupied": "背包中占用（有放東西）的欄位數。",
	"::java::data::advancement::trigger::ItemDurabilityChanged.delta": "耐久度的變化（負數表示耐久下降）。",
	"::java::data::advancement::trigger::ItemDurabilityChanged.durability": "改變後的新耐久度值。",
	"::java::data::advancement::trigger::ItemDurabilityChanged.item": "改變前的原耐久度值。",
	"::java::data::advancement::trigger::KilledByArrow.fired_from_weapon": "用於發射箭矢的物品。",
	"::java::data::advancement::trigger::KilledByArrow.unique_entity_types": "有多少種實體被殺。",
	"::java::data::advancement::trigger::KilledByCrossbow.unique_entity_types": "有多少種實體被殺。",
	"::java::data::advancement::trigger::NetherTravel.distance": "玩家從地獄回到主世界時，和進入地獄時位置的距離。",
	"::java::data::advancement::trigger::NetherTravel.entered": "玩家進入地獄的位置。",
	"::java::data::advancement::trigger::NetherTravel.exited": "玩家從地獄回到主世界時的位置。",
	"::java::data::advancement::trigger::NetherTravel.start_position": "玩家進入地獄的位置。",
	"::java::data::advancement::trigger::PlacedBlock.item": "放置出方塊的物品（物品消耗前的狀態）。",
	"::java::data::advancement::trigger::PlacedBlock.location": "方塊放置的位置。",
	"::java::data::advancement::trigger::ShotCrossbow.item": "使用的弩。",
	"::java::data::advancement::trigger::UsedEnderEye.distance": "玩家和要塞的水平距離。",
	"::java::data::advancement::trigger::VillagerTrade.item": "買下的物品。`count`測試單一交易的數量，而非交易的總數量。",
	"::java::data::damage_type::DamageEffects.Burning": "燃燒的受傷音效。",
	"::java::data::damage_type::DamageEffects.Drowning": "溺水的受傷音效。",
	"::java::data::damage_type::DamageEffects.Freezing": "凍傷的音效。",
	"::java::data::damage_type::DamageEffects.Hurt": "預設的受傷音效。",
	"::java::data::damage_type::DamageEffects.Poking": "被甜莓灌木叢刺傷的音效。",
	"::java::data::damage_type::DamageEffects.Thorns": "尖刺的音效。",
	"::java::data::damage_type::DamageScaling.Always": "必定受難度影響。",
	"::java::data::damage_type::DamageScaling.LivingNonPlayer": "由非玩家生物發動傷害時，傷害受難度影響。",
	"::java::data::damage_type::DamageScaling.Never": "必定不受難度影響。",
	"::java::data::damage_type::DamageType.death_message_type": "指定使用的死亡訊息類別。預設值`default`。\n\n更多資訊：https://zh.minecraft.wiki/w/%E4%BC%A4%E5%AE%B3%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89%E6%A0%BC%E5%BC%8F?variant=zh-tw#%E6%AD%BB%E4%BA%A1%E6%B6%88%E6%81%AF",
	"::java::data::damage_type::DamageType.effects": "指定傷害的音效。預設值`hurt`。",
	"::java::data::damage_type::DamageType.exhaustion": "造成的飢餓值消耗度（Exhaustion）。",
	"::java::data::damage_type::DamageType.message_id": "此傷害使用的死亡訊息。\n和`death_message_type`的值組合生成對應的翻譯鍵。",
	"::java::data::damage_type::DamageType.scaling": "是否要根據難度改變傷害值。",
	"::java::data::damage_type::DeathMessageType.Default": "生成的死亡訊息是`death.attack.` + message_id。",
	"::java::data::damage_type::DeathMessageType.FallVariants": "生成的死亡訊息是`death.attack.` + message_id。",
	"::java::data::damage_type::DeathMessageType.IntentionalGameDesign": "「被刻意的遊戲設計殺死了」訊息，訊息本體是`death.attack.` + message_id + `.message`，附上MCPE-28723連結的文字是`death.attack.` + message_id + `.link`。",
	"::java::data::enchantment::AmmoUseEnchantmentEffect.effect": "投射物的消耗量。",
	"::java::data::enchantment::ApplyMobEffectEntityEffect.to_apply": "指定多種狀態時，隨機選取其中一種。",
	"::java::data::enchantment::AttributeEffect.amount": "屬性值的變化量。",
	"::java::data::enchantment::AttributeEffect.id": "識別屬性修改的ID，必須是唯一的。\n\n實際裝備附魔時，ID後面會附加上欄位名稱，以保持多件裝備的相容性。",
	"::java::data::enchantment::AttributeEffect.operation": "屬性值的計算模式。",
	"::java::world::component::entity::AxolotlVariant.Blue": "稀有的藍色變種。",
	"::java::world::component::entity::RabbitVariant.Evil": "殺手兔"
}
