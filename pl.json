{
	"::java::assets::atlas::Directory.prefix": "Prefix nazwy sprite'a, zwykle zakończony znakiem `/`.",
	"::java::assets::atlas::Filter.pattern": "Wzór do usuwania sprite'ów znajdujących się już w atlasie. Uwzględniana jest kolejność podania źródeł.",
	"::java::assets::atlas::Single.resource": "Lokalizacja pojedynczej tekstury źródła.",
	"::java::assets::block_state_definition::ModelVariantBase.uvlock": "Jeśli `true`, tekstury nie będą obracane z blokiem.",
	"::java::assets::font::UnihexOverrideRange.from": "Minimalny codepoint w zakresie (włącznie).",
	"::java::assets::font::UnihexOverrideRange.to": "Maksymalny codepoint w zakresie (włącznie).",
	"::java::assets::font::UnihexProvider.hex_file": "Archiwum ZIP zawierające jeden lub więcej plików typu *.hex (pliki w archiwum o innych rozszerzeniach są pomijane).",
	"::java::assets::item_definition::Chest.openness": "Domyślnie `0`.",
	"::java::assets::item_definition::CompassTarget.Lodestone": "Wskazuje na lokalizację przechowywaną w komponencie `lodestone_tracker`.",
	"::java::assets::item_definition::CompassTarget.None": "Zawsze nieprawidłowy cel.",
	"::java::assets::item_definition::CompassTarget.Recovery": "Wskazuje na lokalizację śmierci ostatniego gracza.",
	"::java::assets::item_definition::CompassTarget.Spawn": "Wskazuje na spawn świata.",
	"::java::assets::item_definition::ComponentFlags.predicate": "Predykat komponentu do sprawdzenia.",
	"::java::assets::item_definition::ComponentFlags.value": "Wartość specyficzna dla danego predykatu.",
	"::java::assets::item_definition::ComponentStrings.component": "Typ komponentu do sprawdzania jego wartości.\nJeśli wybrana wartość pochodzi z rejestru do którego klient nie ma dostępu,\nwpis ten będzie dyskretnie ignorowany.",
	"::java::assets::item_definition::ConstantTint.value": "Stały odcień koloru który ma zostać zastosowany.",
	"::java::assets::item_definition::CustomModelDataFlags.index": "Indeks listy `flags` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataFloats.index": "Indeks listy `floats` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataStrings.index": "Indeks listy `strings` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `custom_model_data`, bądź gdy nie ma koloru w ustalonym indeksie.",
	"::java::assets::item_definition::CustomModelDataTint.index": "Indeks listy `colors` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::DyeTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `dyed_color`.",
	"::java::assets::item_definition::FireworkTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `firework_explosion`.",
	"::java::assets::item_definition::Head.animation": "Kontroluje czas animacji dla głów piglina oraz smoka. Domyślnie `0`.",
	"::java::assets::item_definition::Head.texture": "Tekstura która ma zostać użyta zamiast tekstury z `kind`.",
	"::java::assets::item_definition::ItemDefinition.hand_animation_on_swap": "Ustala czy animacja dół-i-góra powinna być odtwarzana w widoku pierwszej osoby, jeśli zmieniła się liczba przedmiotów w stacku.\nDomyślnie `true`.",
	"::java::assets::item_definition::ItemDefinition.oversized_in_gui": "Ustala czy model przedmiotu może być większy niż slot na ten przedmiot.\nDomyślnie `false`, co sprawia, że model przedmiotu w GUI jest przycięty do rozmiaru slotu na przedmiot.\nFunkcjonalność `true` w tej chwili **nie** jest oficjalnie wspierana.",
	"::java::assets::item_definition::KeybindDown.keybind": "ID keybindu które ma zostać sprawdzone.",
	"::java::assets::item_definition::LocalTime.pattern": "Format używany do formatowania daty i czasu.\nPrzykładowo: `yyyy-MM-dd`, `HH:mm:ss`.",
	"::java::assets::item_definition::LocalTime.time_zone": "Domyślnie strefa czasowa klienta.\nPrzykładowo: `Europa/Sztokholm`, `GMT+0:45`.",
	"::java::assets::item_definition::MapColorTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `map_color`.",
	"::java::assets::item_definition::PotionTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `potion_contents`, bądź gdy mikstura nie ma efektów ani ustawionego `custom_color`.",
	"::java::assets::item_definition::RangeDispatch.fallback": "Model przedmiotu który ma zostać wyrenderowany, jeśli żaden z wpisów nie był mniejszy bądź równy podanej wartości.",
	"::java::assets::item_definition::RangeDispatch.scale": "Mnożnik wartości. Domyślnie 1.",
	"::java::assets::item_definition::Select.fallback": "Model przedmiotu który ma zostać wyrenderowany, jeśli żaden z przypadków nie został spełniony.",
	"::java::assets::item_definition::ShulkerBox.orientation": "Domyślnie `up`.",
	"::java::assets::item_definition::Special.base": "Model podstawowy, zapewniający transformacje, teksturę cząstek oraz światło GUI.",
	"::java::assets::item_definition::Special.model": "Renderuje specjalny, odgórnie zaprogramowany model.",
	"::java::assets::item_definition::TeamTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje bytu kontekstowego, byt nie należy do drużyny, bądź drużyna nie ma koloru.",
	"::java::assets::item_definition::UseCycle.period": "Zwraca resztę z dzielenia pozostałych ticków użycia przedmiotu przez `period`.\nDomyślnie 1.",
	"::java::assets::item_definition::UseDuration.remaining": "Jeśli `true`, zwraca liczbę pozostałych ticków użycia przedmiotu.\nJeśli `false`, zwraca dotychczasową liczbę ticków użycia przedmiotu.\nDomyślnie `false`.",
	"::java::assets::lang::LangDeprecated.removed": "Lista usuniętych kluczy tłumaczeń.",
	"::java::assets::lang::LangDeprecated.renamed": "Mapowanie kluczy tłumaczeń o zmienionej nazwie ze starych na nowe.",
	"::java::assets::model::ModelElementRotation.rescale": "Domyślnie `false`.",
	"::java::assets::model::Predicates.HoneyLevel": "Poziom miodu w ulach i w gniazdach pszczół.",
	"::java::assets::model::Predicates.Level": "Stan bloku `level` na świecących przedmiotach.",
	"::java::assets::model::Predicates.Throwing": "Sprawdza czy trójząb jest używany.",
	"::java::assets::model::Predicates.Tooting": "Sprawdza czy kozi róg jest używany.",
	"::java::assets::regional_compliancies::Notification": "Kod regionu.",
	"::java::assets::shader::post::InternalTarget.clear_color": "Cel zostanie wypełniony tym kolorem kiedy zostanie stworzony lub wyczyszczony. Domyślnie `0`.",
	"::java::assets::shader::post::InternalTarget.persistent": "Jeśli `true`, cel będzie ciągle obecny pomiędzy klatkami. Domyślnie `false`.\nZawartość celu zostanie wyczyszczona jeśli okno zmieni rozmiar.",
	"::java::assets::shader::post::UniformValue.name": "Pole nieużywane przez samą grę, lecz w istocie jest warte podania.",
	"::java::assets::shader::program::Defines.flags": "Flagi które zostaną wstawione jako `#define <klucz>` na samym początku pliku.",
	"::java::assets::shader::program::Defines.values": "Wartości które zostaną wstawione jako `#define <klucz> <wartosc>` na samym początku pliku.",
	"::java::assets::shader::program::ShaderProgram.blend": "Nieużywane.",
	"::java::assets::shader::program::ShaderProgram.defines": "Definiuje dyrektywy GLSL wstawiane w źródle shadera.",
	"::java::assets::sounds::Sound.attenuation_distance": "Modyfikuje współczynnik redukcji natężenia dźwięku w zależności od odległości. Domyślnie `16`.",
	"::java::assets::sounds::Sound.pitch": "Domyślnie `1.0`.",
	"::java::assets::sounds::Sound.preload": "Ustala czy dźwięk powinien być załadowany w czasie ładowania paczki, zamiast w momencie odtworzenia dźwięku. Używane przez otoczenie pod wodą. Domyślnie `false`.",
	"::java::assets::sounds::Sound.stream": "Jeśli `true`, dźwięk będzie strumieniowany z pliku. Dźwięki dłuższe niż kilka sekund powinny mieć to włączone, aby zapobiec lagom. Domyślnie `false`.\nJeśli `false`, wiele instancji tego dźwięku może być jednocześnie odtwarzane. Jeśli `true`, maksymalnie 4 instancje (tego samego typu) mogą być odtwarzane naraz.",
	"::java::assets::sounds::Sound.type": "Ustala jak `name` jest interpretowane. Domyślnie `sound`.",
	"::java::assets::sounds::Sound.volume": "Domyślnie `1.0`.",
	"::java::assets::sounds::Sound.weight": "Szansa jaką ma ten dźwięk żeby zostać odtworzony. Domyślnie `1`.",
	"::java::assets::sounds::SoundEventRegistration.sounds": "Pliki dźwiękowe używane przez te zdarzenie. Jeden losowy dźwięk zostanie odtworzony jeśli zdarzenie zostanie wywołane. Domyślnie to przypuszczana ścieżka.",
	"::java::assets::sounds::SoundType.File": "Plik.",
	"::java::assets::sounds::SoundType.SoundEvent": "Uprzednio zdefiniowane zdarzenie.",
	"::java::assets::texture_meta::ColormapTextureMeta.blur": "Sprawia, że tekstura jest rozmyta, gdy jest oglądana z bliska. Domyślnie `false`.",
	"::java::assets::texture_meta::ColormapTextureMeta.clamp": "Sprawia, że tekstura jest rozciągana zamiast bycia umieszczoną sąsiadująco w przypadkach, gdzie normalnie by tak było, takich jak cienie. Domyślnie `false`.",
	"::java::assets::texture_meta::ColormapTextureMeta.mipmaps": "Niestandardowe wartości mipmapy dla tekstury.",
	"::java::assets::texture_meta::GuiMeta.scaling": "Konfiguruje jak tekstura GUI powinna być skalowana. Domyślnie `stretch`.",
	"::java::assets::texture_meta::NineSlice.stretch_inner": "Domyślnie`false`.",
	"::java::assets::texture_meta::TextureAnimation.frames": "Domyślnie pokazuje wszystkie klatki od góry do dołu.",
	"::java::assets::texture_meta::TextureAnimation.frames.index": "Liczba odpowiadająca pozycji klatki od góry, gdzie górna klatka jest równa 0.",
	"::java::assets::texture_meta::TextureAnimation.frames.time": "Czas wyrażony w tickach do pokazania tej klatki, zastępujący `frametime`.",
	"::java::assets::texture_meta::TextureAnimation.frametime": "Ustawia domyślny czas dla każdej klatki w przyroście jednego ticku gry. Domyślnie 1.",
	"::java::assets::texture_meta::TextureAnimation.interpolate": "Jeśli `true`, dodatkowe klatki zostaną wygenerowane pomiędzy klatkami, mające pomiędzy nimi czas klatki większy niż 1. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureAnimationFrame.index": "Liczba odpowiadająca pozycji klatki od góry, gdzie górna klatka jest równa 0.",
	"::java::assets::texture_meta::TextureAnimationFrame.time": "Czas wyrażony w tickach do pokazania tej klatki, zastępujący `frametime`.",
	"::java::assets::texture_meta::TextureMeta.texture": "Dostępne tylko w colormapach.",
	"::java::assets::texture_meta::TextureMeta.texture.blur": "Sprawia, że tekstura jest rozmyta, gdy jest oglądana z bliska. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureMeta.texture.clamp": "Sprawia, że tekstura jest rozciągana zamiast bycia umieszczoną sąsiadująco w przypadkach, gdzie normalnie by tak było, takich jak cienie. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureMeta.texture.mipmaps": "Niestandardowe wartości mipmapy dla tekstury.",
	"::java::assets::texture_meta::TextureMeta.villager": "Dostępne tylko dla tekstur osadników.",
	"::java::assets::waypoint_style::WaypointStyle.far_distance": "Domyślnie `322`.",
	"::java::assets::waypoint_style::WaypointStyle.near_distance": "Domyślnie `128`.",
	"::java::data::advancement::Advancement.criteria": "Jeśli `requirements` nie zostanie zdefiniowane, wszystkie podane kryteria będą wymagane.",
	"::java::data::advancement::Advancement.display": "Jeśli istnieje, postępy będą widoczne w kartach postępów.",
	"::java::data::advancement::Advancement.parent": "Jeśli to pole nie zostanie podane, ten postęp jest postępem bazowym.\nWzajemne odniesienia spowodują błąd podczas ładowania.",
	"::java::data::advancement::Advancement.requirements": "Zawiera wszystkie klucze `criteria`.\nJeśli wszystkie kryteria są wymagane jednocześnie, można to pole ominąć.\nJeśli jest wiele kryteriów, zawiera listę list z kryteriami (wszystkie kryteria muszą zostać podane).\nJeśli każda z tych list ma dowolne spełnione kryterium, postęp zostaje zaliczony (w skrócie: grupowanie AND grup OR)",
	"::java::data::advancement::Advancement.rewards": "Przyznawane graczowi gdy ten postęp zostanie zaliczony.",
	"::java::data::advancement::Advancement.sends_telemetry_event": "Domyślnie `false`. Klient vanilla gry sczytuje to pole jedynie osiągnięciom w przestrzeni nazw `minecraft`.",
	"::java::data::advancement::AdvancementCriterion.trigger": "Wiele wyzwalaczy może występować wiele razy, jednakże nagroda może zostać przyznana wielokrotnie tylko wtedy, gdy postęp zostanie najpierw graczowi unieważniony. Jest to często stosowana praktyka, gdy nagrodą jest wywołanie funkcji.",
	"::java::data::advancement::AdvancementDisplay.announce_to_chat": "Określa czy na czacie ma zostać ogłoszone, że ten postęp został zaliczony. Domyślnie `true`.",
	"::java::data::advancement::AdvancementDisplay.background": "Używane na karcie postępów (dotyczy tylko postępów bazowych).",
	"::java::data::advancement::AdvancementDisplay.frame": "Określa kształt ramki postępu. Domyślnie `task`.",
	"::java::data::advancement::AdvancementDisplay.hidden": "Ustala, czy ten postęp wraz z jego dziećmi mają pozostać ukryte w drzewku postępów\naż do czasu jego zaliczenia.\nNie ma to wpływu na same postępy bazowe, lecz mimo wszystko wpływa to na jego dzieci.\nDomyślnie `false`.",
	"::java::data::advancement::AdvancementDisplay.show_toast": "Ustala czy ma zostać wyświetlony dymek po zaliczeniu tego postępu. Domyślnie `true`.",
	"::java::data::advancement::AdvancementFrame.Challenge": "Elegancka krawędź z kolcami (używana np. w postępie za zatłuczenie każdego moba).",
	"::java::data::advancement::AdvancementFrame.Goal": "Okrągła krawędź (używana np. w postępie za wybudowanie beacona o pełnej mocy).",
	"::java::data::advancement::AdvancementFrame.Task": "Zwykła krawędź.",
	"::java::data::advancement::AdvancementRewards.experience": "Ilość XP do dodania.",
	"::java::data::advancement::AdvancementRewards.function": "Funkcja która ma zostać wykonana jako gracz (lecz nie w miejscu gracza). Tagi grup funkcji nie są dozwolone.",
	"::java::data::advancement::AdvancementRewards.loot": "Tabela łupów do dania.",
	"::java::data::advancement::AdvancementRewards.recipes": "Receptury do odblokowania.",
	"::java::data::advancement::predicate::BlockPredicate.components": "Dopasuj dokładne wartości komponentu danych na bycie blokowym.",
	"::java::data::advancement::predicate::BlockPredicate.predicates": "Sprawdza wartości komponentu danych na bycie blokowym.",
	"::java::data::advancement::predicate::DamagePredicate.blocked": "Ustala czy obrażenie zostało pomyślnie zblokowane.",
	"::java::data::advancement::predicate::DamagePredicate.dealt": "Ilość przychodzących obrażeń przed redukcją obrażeń.",
	"::java::data::advancement::predicate::DamagePredicate.source_entity": "Źródło obrażeń (np. szkielet wystrzeliwujący strzałę, gracz podpalający TNT).",
	"::java::data::advancement::predicate::DamagePredicate.taken": "Ilość przychodzących obrażeń po redukcji obrażeń.",
	"::java::data::advancement::predicate::DamagePredicate.type": "Typ źródła obrażeń.",
	"::java::data::advancement::predicate::DamageSourcePredicate.direct_entity": "Byt wprost odpowiedzialny za obrażenie (np. strzała, TNT).",
	"::java::data::advancement::predicate::DamageSourcePredicate.is_direct": "Obrażenie jest bezpośrednie kiedy byt bezpośrednio odpowiedzialny jest jednocześnie bytem źródłowym.",
	"::java::data::advancement::predicate::DamageSourcePredicate.source_entity": "Źródło obrażeń (np. szkielet wystrzeliwujący strzałę, gracz podpalający TNT).",
	"::java::data::advancement::predicate::DamageSourcePredicate.tags": "Tagi typu obrażeń w których typ obrażeń się znajduje.",
	"::java::data::advancement::predicate::DamageTagPredicate.expected": "Ustala czy ma być spodziewane żeby obrażenie miało tag.",
	"::java::data::advancement::predicate::DamageTagPredicate.id": "Tag typu obrażeń do sprawdzenia.",
	"::java::data::advancement::predicate::EntityPredicate.components": "Dopasuj dokładne wartości komponentu danych na bycie.",
	"::java::data::advancement::predicate::EntityPredicate.movement_affected_by": "Określa czy blok na maksymalnie 0.5 bloków pod bytem jest obecny, co może wpłynąć na jego ruch.",
	"::java::data::advancement::predicate::EntityPredicate.predicates": "Sprawdza wartości komponentu danych na bycie.",
	"::java::data::advancement::predicate::LocationPredicate.can_see_sky": "Określa czy lokacja ma najwyższy możliwy poziom światła dziennego.",
	"::java::data::advancement::predicate::LocationPredicate.smokey": "Określa czy blok jest powyżej (do 5 bloków) ogniska bądź ogniska dusz.",
	"::java::data::advancement::predicate::PlayerPredicate.level": "Doświadczenie/Poziom XP.",
	"::java::data::advancement::trigger::BeeNestDestroyed.item": "Przedmiot użyty do zniszczenia bloku.",
	"::java::data::advancement::trigger::BeeNestDestroyed.num_bees_inside": "Liczba pszczół które były w środku ula/gniazda pszczół przed zniszczeniem.",
	"::java::data::advancement::trigger::ConstructBeacon.level": "Poziom ulepszonej podstawy beacona.",
	"::java::data::advancement::trigger::DefaultBlockUse.location": "Lokalizacja bloku.",
	"::java::data::advancement::trigger::FishingRodHooked.item": "Przedmiot złowiony.",
	"::java::data::advancement::trigger::FishingRodHooked.rod": "Użyta wędka.",
	"::java::data::advancement::trigger::InventoryChangedSlots.empty": "Liczba wolnych slotów.",
	"::java::data::advancement::trigger::InventoryChangedSlots.full": "Liczba slotów, które są pełnymi stackami.",
	"::java::data::advancement::trigger::InventoryChangedSlots.occupied": "Liczba zajętych slotów.",
	"::java::data::advancement::trigger::ItemDurabilityChanged.durability": "Wynikająca trwałość.",
	"::java::data::advancement::trigger::ItemDurabilityChanged.item": "Przedmiot przed jego zmianą trwałości.",
	"::java::data::advancement::trigger::KilledByArrow.fired_from_weapon": "Broń która została użyta do wystrzelenia strzały.",
	"::java::data::advancement::trigger::KilledByArrow.unique_entity_types": "Jak wiele różnych rodzajów bytów zostało zabite.",
	"::java::data::advancement::trigger::KilledByCrossbow.unique_entity_types": "Jak wiele różnych rodzajów bytów zostało zabite.",
	"::java::data::advancement::trigger::PlacedBlock.item": "Przedmiot użyty do postawienia bloku zanim został zużyty.",
	"::java::data::advancement::trigger::PlacedBlock.location": "Gdzie blok został postawiony.",
	"::java::data::advancement::trigger::ShotCrossbow.item": "Kusza która została użyta.",
	"::java::data::advancement::trigger::UsedEnderEye.distance": "Pozioma odległość pomiędzy graczem a twierdzą.",
	"::java::data::advancement::trigger::VillagerTrade.item": "Przedmiot który został kupiony. Tag `count` sprawdza ilość przedmiotu z jednej transakcji, a nie łączną zakupioną ilość.",
	"::java::data::damage_type::DamageEffects.Burning": "Pojedynczy tick dźwięku obrażeń od płonięcia.",
	"::java::data::damage_type::DamageEffects.Drowning": "Dźwięk tonięcia.",
	"::java::data::damage_type::DamageEffects.Freezing": "Pojedynczy tick dźwięku obrażeń od marźnięcia.",
	"::java::data::damage_type::DamageEffects.Hurt": "Domyślny dźwięk obrażeń.",
	"::java::data::damage_type::DamageEffects.Poking": "Dźwięk wpuszczania się w maliny.",
	"::java::data::damage_type::DamageEffects.Thorns": "Dźwięk obrażeń od cierni.",
	"::java::data::damage_type::DamageScaling.Always": "Zawsze skaluj wraz z poziomem trudności.",
	"::java::data::damage_type::DamageScaling.LivingNonPlayer": "Skaluj wraz z poziomem trudności, jeśli było to spowodowane przez żywy byt niebędący graczem.",
	"::java::data::damage_type::DamageScaling.Never": "Zawsze ten sam.",
	"::java::data::damage_type::DamageType.death_message_type": "Kontroluje czy specjalne warianty wiadomości o śmierci mają zostać użyte. Domyślnie `default`.\n\nWięcej informacji: https://minecraft.wiki/w/Damage_type#Death_messages",
	"::java::data::damage_type::DamageType.effects": "Kontroluje jak deklarują się obrażenia po zadaniu graczom. Domyślnie `hurt`.",
	"::java::data::damage_type::DamageType.scaling": "Określa czy skalować obrażenia wraz z poziomem trudności.",
	"::java::data::damage_type::DeathMessageType.Default": "Klucz tłumaczenia `death.attack.` + message_id.",
	"::java::data::damage_type::DeathMessageType.FallVariants": "Klucz tłumaczenia `death.attack.` + message_id.",
	"::java::data::damage_type::DeathMessageType.IntentionalGameDesign": "Klucz tłumaczenia `death.attack.` + message_id + `.link`.",
	"::java::data::dialog::AfterAction.Close": "Zamyka dialog.\nPowraca do poprzedniego ekranu niebędącego dialogiem, jeśli takowy istnieje.",
	"::java::data::dialog::AfterAction.None": "Nic nie robi.\nDostępne tylko jeśli `pause` ma wartość `false`.",
	"::java::data::dialog::AfterAction.WaitForResponse": "Zamienia dialog ekranem \"Oczekiwanie na serwer\".\nEkran oczekiwania odpauzowywuje grę w trybie jednoosobowym.",
	"::java::data::dialog::Button.action": "Jeśli nie podano, naciśnięcie przycisku zamknie dialog, nie wykonując żadnej akcji.",
	"::java::data::dialog::Button.width": "Szerokość przycisku.\nDomyślnie `150`.",
	"::java::data::dialog::ButtonListDialogBase.button_width": "Szerokość przycisku na liście.\nDomyślnie `150`.",
	"::java::data::dialog::ConfirmationDialog.no": "Ta sama akcja jest również wykonywana jeśli dialog zostanie zamknięty klawiszem Esc.",
	"::java::data::dialog::DialogBase.after_action": "Dodatkowa operacja wykonywana na dialogu po wciśnięciu lub przesłaniu akcji.\nDomyślnie `close`.",
	"::java::data::dialog::DialogBase.can_close_with_escape": "Określa czy można zamknąć dialog klawiszem Esc.\nDomyślnie `true`.",
	"::java::data::dialog::DialogBase.external_title": "Nazwa pokazywana na przycisku prowadzącym do tego dialogu.\nJeśli nie podano, pokazywany będzie `title`.",
	"::java::data::dialog::DialogBase.pause": "Określa czy dialog powinien pauzować grę w trybie jednoosobowym.\nDomyślnie `true`.",
	"::java::data::dialog::ListDialogBase.columns": "Ilość kolumn.\nDomyślnie `2`.",
	"::java::data::dialog::ListDialogBase.exit_action": "Przycisk w stopce.\nTa sama akcja jest również wykonywana jeśli dialog zostanie zamknięty klawiszem Esc.",
	"::java::data::dialog::NoticeDialog.action": "Jedyna akcja w stopce.\nDomyślnie przycisk z etykietą `gui.ok`, nie wykonuje żadnej akcji ani nie ma opisu.",
	"::java::data::dialog::body::ItemBody.description": "Opis renderowany na prawo od przedmiotu.",
	"::java::data::dialog::body::ItemBody.height": "Wysokość przedmiotu.\nDomyślnie `16`.",
	"::java::data::dialog::body::ItemBody.show_decorations": "Określa czy ilość i pasek trwałości są wyświetlane na przedmiocie.\nDomyślnie `true`.",
	"::java::data::dialog::body::ItemBody.show_tooltip": "Określa czy pokazywany jest opis przedmiotu, gdy najedzie się go myszką.\nDomyślnie`true`.",
	"::java::data::dialog::body::ItemBody.width": "Szerokość przedmiotu.\nDomyślnie `16`.",
	"::java::data::dialog::body::PlainMessage.width": "Maksymalna szerokość wiadomości.\nDomyślnie `200`.",
	"::java::data::dialog::input::BooleanInput.initial": "Wstępna wartość checkboxa.\nDomyślnie `false` (odznaczony).",
	"::java::data::dialog::input::BooleanInput.label": "Etykieta wyświetlana przy checkboxie.",
	"::java::data::dialog::input::BooleanInput.on_false": "String który ma zostać przesłany jeśli checkbox jest odznaczony.\nDomyślnie `\"false\"`.",
	"::java::data::dialog::input::BooleanInput.on_true": "String który ma zostać przesłany jeśli checkbox jest zaznaczony.\nDomyślnie `\"true\"`.",
	"::java::data::dialog::input::InputControl.key": "Klucz wejściowy, używany do tworzenia komendy z makrem i generowania niestandardowego payloada jako akcji.",
	"::java::data::dialog::input::MultiLine.height": "Wysokość pola tekstowego.\nJeśli nie podano tego pola:\n- Jeśli `max_lines` istnieje, wysokość będzie taka aby zmieszczono się w maksymalnej ilości linii. Maksymalna wysokość wynosi 512 linii.\n- Jeśli `max_lines` nie istnieje, wysokość będzie taka aby zmieszczono się w 4 liniach.",
	"::java::data::dialog::input::NumberRangeInput.end": "Wartość końcowa, włącznie.",
	"::java::data::dialog::input::NumberRangeInput.initial": "Wstępna wartość slidera. Zaokrąglona w dół do najbliższego kroku.\nDomyślnie wartość ze środka zakresu.",
	"::java::data::dialog::input::NumberRangeInput.label": "Etykieta wyświetlana na sliderze.",
	"::java::data::dialog::input::NumberRangeInput.label_format": "Tłumaczenie użyte przy tworzeniu etykiety.\n`%1$s` zostaje zastąpione poprzez `label`, `%2$s` zostaje zastąpione aktualną wartością slidera.\nDomyślnie `options.generic_value`.",
	"::java::data::dialog::input::NumberRangeInput.start": "Wartość początkowa, włącznie.",
	"::java::data::dialog::input::NumberRangeInput.step": "Rozmiar kroku pomiędzy wartościami.\nJeśli nie podano, dozwolona jest każda wartość z zakresu.",
	"::java::data::dialog::input::NumberRangeInput.width": "Domyślnie `200`.",
	"::java::data::dialog::input::Option.display": "Etykieta wyświetlana na przycisku.\nJeśli nie podano, wyświetlane będzie `id`.",
	"::java::data::dialog::input::Option.id": "String który ma zostać przesłany.",
	"::java::data::dialog::input::Option.initial": "Określa czy ta opcja jest wartością wstępną.\nTylko jedna z opcji może mieć to pole z wartością `true`.",
	"::java::data::dialog::input::SingleOptionInput.label": "Etykieta wyświetlana na przycisku.",
	"::java::data::dialog::input::SingleOptionInput.label_visible": "Domyślnie `true`.",
	"::java::data::dialog::input::SingleOptionInput.width": "Domyślnie `200`.",
	"::java::data::dialog::input::TextInput.initial": "Wstępna zawartość pola tekstowego.\nDomyślnie `\"\"` (pusty string).",
	"::java::data::dialog::input::TextInput.label": "Etykieta wyświetlana na lewo od pola wejściowego.",
	"::java::data::dialog::input::TextInput.label_visible": "Domyślnie `true`.",
	"::java::data::dialog::input::TextInput.max_length": "Maksymalna długość wejścia.\nDomyślnie `32`.",
	"::java::data::dialog::input::TextInput.multiline": "Jeśli podano, pozwala użytkownikowi wprowadzić wiele linii.",
	"::java::data::dialog::input::TextInput.multiline.height": "Wysokość pola tekstowego.\nJeśli nie podano tego pola:\n- Jeśli `max_lines` istnieje, wysokość będzie taka aby zmieszczono się w maksymalnej ilości linii. Maksymalna wysokość wynosi 512 linii.\n- Jeśli `max_lines` nie istnieje, wysokość będzie taka aby zmieszczono się w 4 liniach.",
	"::java::data::dialog::input::TextInput.width": "Domyślnie `200`.",
	"::java::data::enchantment::Enchantment.max_cost": "Maksymalny koszt XP.",
	"::java::data::enchantment::Enchantment.max_level": "Maksymalny poziom zaklęcia.",
	"::java::data::enchantment::Enchantment.min_cost": "Minimalny koszt XP.",
	"::java::data::enchantment::Enchantment.weight": "Określa jak często Zaklęcie się pojawia, w porównaniu do łącznego `weight` wszystkich dostępnych zaklęć.",
	"::java::data::enchantment::EnchantmentCost.base": "Podstawowy koszt na poziomie 1.",
	"::java::data::enchantment::EnchantmentCost.per_level_above_first": "Zwiększenie kosztu na poziom powyżej 1.",
	"::java::data::enchantment::effect::ApplyMobEffectEntityEffect.to_apply": "Jeśli podano wiele efektów mobów, wybierany jest losowy efekt.",
	"::java::data::enchantment::effect::AttributeEffect.id": "Używane podczas zakładania i zdejmowania przedmiotu aby zidentyfikować, jaki modyfikator dodać lub usunąć bytowi.",
	"::java::data::enchantment::effect::AttributeEffect.operation": "Operacja na atrybutach jaka ma zostać wykonana.",
	"::java::data::enchantment::effect::BlockInteraction.Block": "Wyrzuca przedmioty tak jakby blok spowodował wybuch; zasada gry `blockExplosionDropDecay` obowiązuje.",
	"::java::data::enchantment::effect::BlockInteraction.Mob": "Wyrzuca przedmioty tak jakby mob spowodował wybuch; zasada gry `blockExplosionDropDecay` obowiązuje.",
	"::java::data::enchantment::effect::BlockInteraction.None": "Żaden przedmiot nie wypada, bądź nie ma żadnego specjalnego zachowania.",
	"::java::data::enchantment::effect::BlockInteraction.TNT": "Wyrzuca przedmioty tak jakby TNT spowodowało wybuch; zasada gry `blockExplosionDropDecay` obowiązuje.",
	"::java::data::enchantment::effect::BlockInteraction.Trigger": "Triggeruje bloki aktywowane redstonem.",
	"::java::data::enchantment::effect::ChangeItemDamageEffect.amount": "Uszkodzenia nakładane na zaklinany przedmiot. Ujemne wartości spowodują naprawę przedmiotu.\nZmiany nie są stosowane na przedmioty trzymane przez graczy w trybie kreatywnym.",
	"::java::data::enchantment::effect::DamageItemEffect.amount": "Uszkodzenia nakładane na zaklinany przedmiot.\nNie są one nakładane na przedmioty trzymane przez graczy w trybie kreatywnym.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.block_interaction": "Określa czy wybuch wywołuje specjalne efekty na blokach.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.create_fire": "Określa czy ogień pojawia się w zasięgu wybuchu.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.damage_type": "Jeśli nie podano, żadne obrażenia nie zostaną zadane przez wybuch.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.immune_blocks": "Lista Bloków bądź Tagów Bloków z prefixem-hashem, określających które bloki w pełni będą blokować wybuch.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.knockback_multiplier": "Jeśli nie podano, domyślny odrzut wybuchu będzie zastosowany.",
	"::java::data::enchantment::effect::ExplodeEntityEffect.offset": "Względne koordynaty o które należy przesunąć wybuch. Domyślnie `[0, 0, 0]`.",
	"::java::data::enchantment::effect_component::AmmoUseEnchantmentEffect.effect": "Ilość używanej amunicji.",
	"::java::data::enchantment::effect_component::CrossbowChargeSoundsEnchantmentEffect.end": "Koniec ładowania.",
	"::java::data::enchantment::effect_component::CrossbowChargeSoundsEnchantmentEffect.mid": "Środek ładowania.",
	"::java::data::enchantment::effect_component::CrossbowChargeSoundsEnchantmentEffect.start": "Początek ładowania.",
	"::java::data::enchantment::effect_component::DamageEnchantmentEffect.effect": "Określa efektywność zbroi; `0.0` oznacza brak efektu, `1.0` oznacza pełnię efektu.",
	"::java::data::enchantment::effect_component::FishingLuckBonusEnchantmentEffect.effect": "Ilość szczęścia do dodania.",
	"::java::data::enchantment::provider::ByCostEnchantmentProvider.cost": "Koszt użyty w czasie Zaklinania.",
	"::java::data::enchantment::provider::ByCostWithDifficultyEnchantmentProvider.max_cost_span": "Rozpiętość losowości kosztu, jeśli specjalny współczynnik osiągnął maksimum.",
	"::java::data::enchantment::provider::ByCostWithDifficultyEnchantmentProvider.min_cost": "Dodatnia liczba oznaczająca najmniejszy możliwy koszt.",
	"::java::data::gametest::FunctionTestInstance.function": "Funkcja testowa (kod Java) do wykonania.",
	"::java::data::gametest::TestData.environment": "Środowisko testowe do wykonania tego testu.",
	"::java::data::gametest::TestData.manual_only": "Jeśli `true`, test nie jest częścią automatycznych wykonań testów. Domyślnie `false`.",
	"::java::data::gametest::TestData.max_attempts": "Liczba podejść do wykonania testu. Domyślnie `1`.",
	"::java::data::gametest::TestData.max_ticks": "Maksymalna dozwolona liczba ticków aby móc zaliczyć test zanim uzna się, że upłynął czas.",
	"::java::data::gametest::TestData.required": "Określa czy test jest wymagany, aby zaliczyć cały komplet testów. Domyślnie `true`.",
	"::java::data::gametest::TestData.required_successes": "Liczba podejść która musi się udać, aby test został uznany za zaliczony. Domyślnie `1`.",
	"::java::data::gametest::TestData.rotation": "Rotacja do zastosowania na strukturze testowej. Domyślnie `none`.",
	"::java::data::gametest::TestData.setup_ticks": "Liczba ticków do odczekania po umieszczeniu struktury, zanim test się rozpocznie. Domyślnie `0`.",
	"::java::data::gametest::TestData.sky_access": "Określa czy test potrzebuje dostępu do nieba. Domyślnie `false`.\nJeśli `false`, test zostanie w pełni zamknięty w barierach. Jeśli `true`, tylko górna ściana zostanie otwarta.",
	"::java::data::gametest::TestData.structure": "Plik NBT struktury do użycia w teście.",
	"::java::data::loot::DynamicDrops.Contents": "Upuszcza przedmiot w shulkerowej skrzyni.",
	"::java::data::loot::DynamicDrops.Sherds": "Upuszcza odłamki dekorowanego garnca.",
	"::java::data::loot::TagPoolEntry.expand": "Jeśli `true`, wyrzuca losowy przedmiot należący do taga. Jeśli `false`, wyrzuca wszystkie przedmioty z taga.",
	"::java::data::loot::condition::AllOf.terms": "Zalicza test gdy wszystkie warunki są spełnione.",
	"::java::data::loot::condition::AnyOf.terms": "Zalicza test gdy dowolny warunek zostanie spełniony.",
	"::java::data::loot::condition::Reference.name": "Odniesienia cykliczne powodują błąd parsowania.",
	"::java::data::loot::condition::TableBonus.chances": "Prawdopodobieństwa dla każdego poziomu zaklęcia.",
	"::java::data::loot::condition::TimeCheck.value": "Sprawdza aktualny tick gry.",
	"::java::data::loot::condition::ValueCheck.range": "Zalicza jeśli `value` znajduje się w zakresie.",
	"::java::data::loot::function::AttributeModifier.attribute": "Typ atrybutu do modyfikacji.",
	"::java::data::loot::function::AttributeModifier.id": "Unikalny identyfikator tego modyfikatora atrybutu.",
	"::java::data::loot::function::AttributeModifier.operation": "Operacja wykonana na tym modyfikatorze.",
	"::java::data::loot::function::AttributeModifier.slot": "Jeśli to jest lista, jeden z podanych slotów zostanie losowo wybrany.",
	"::java::data::loot::function::CopyComponents.exclude": "Domyślnie nic.",
	"::java::data::loot::function::CopyComponents.include": "Jeśli nie podano, zawarte są wszystkie obecne komponenty.",
	"::java::data::loot::function::CopyNbtStrategy.Append": "Dopisz do listy.",
	"::java::data::loot::function::CopyNbtStrategy.Merge": "Scal w tag złożony.",
	"::java::data::loot::function::CopyNbtStrategy.Replace": "Zastąp całą istniejącą zawartość celu.",
	"::java::data::loot::function::EnchantRandomly.enchantments": "Jeśli nie podano, wszystkie kompatybilne zaklęcia są dozwolone.",
	"::java::data::loot::function::EnchantRandomly.only_compatible": "Ustala czy można zaklinać przedmioty jedynie z kompatybilnymi zaklęciami. Domyślnie `true`.\n\nUwaga: Książki są kompatybilne ze wszystkimi Zaklęciami.",
	"::java::data::loot::function::EnchantRandomly.options": "Dozwolone zaklęcia. Jeśli nie podano, wszystkie kompatybilne zaklęcia są dozwolone.",
	"::java::data::loot::function::EnchantWithLevels.options": "Dozwolone zaklęcia. Jeśli nie podano, wszystkie kompatybilne zaklęcia są dozwolone.",
	"::java::data::loot::function::EnchantedCountBase.count": "Jeśli liczbą jest ułamek, wynik zostanie zaokrąglony *dopiero po* pomnożeniu liczby przez poziom łupu.",
	"::java::data::loot::function::EnchantedCountBase.limit": "Ogranicza ilości przedmiotu zakresem.",
	"::java::data::loot::function::ExplorationMap.decoration": "Ikonka używana do zaznaczenia celu na mapie. Można podać dowolne tekstowe ID ikonki (wielkość znaków bez znaczenia).\nJeśli podano `mansion` lub `monument`, kolory kresek na teksturze mapy (przedmiotu) zmienią się na im odpowiadające.",
	"::java::data::loot::function::ExplorationMap.destination": "Wygenerowana struktura do zlokalizowania. Dozwolona jest każda struktura używana w komendzie `/locate`. Domyślnie wskazuje ukryty skarb.",
	"::java::data::loot::function::ExplorationMap.search_radius": "Rozmiar strefy podany w chunkach, w której będzie poszukiwana struktura.\nStrefa ma kształt kwadratu, nie koła.\nPromień `0` powoduje szukanie tylko na bieżącym chunku, promień `1` powoduje szukanie na bieżącym chunku oraz na ośmiu chunkach dookoła niego, itd.\nDomyślnie `50`.",
	"::java::data::loot::function::ExplorationMap.skip_existing_chunks": "Ustala czy wygenerowane chunki mają zostać pominięte w poszukiwaniach. Domyślnie `true`.",
	"::java::data::loot::function::ExplorationMap.zoom": "Domyślnie `2`.",
	"::java::data::loot::function::Filtered.item_filter": "Predykat przedmiotu aby wybrać przedmioty do modyfikacji.",
	"::java::data::loot::function::Filtered.modifier": "Funkcja łupów do zastosowania na wybranych przedmiotach.",
	"::java::data::loot::function::InsertListOperation.offset": "Przesunięcie gdzie wstawić do listy. Domyślnie `0`.",
	"::java::data::loot::function::LimitCount.limit": "Ogranicza ilości przedmiotu zakresem.",
	"::java::data::loot::function::ListOperation.mode": "Określa jak istniejąca lista powinna być modyfikowana.",
	"::java::data::loot::function::ModifyContents.component": "Opisuje przedmioty z docelowego komponentu do modyfikacji.",
	"::java::data::loot::function::ModifyContents.modifier": "Stosowane na każdym przedmiocie w kontenerze.",
	"::java::data::loot::function::Reference.name": "Modyfikator przedmiotu do którego się odnieść.",
	"::java::data::loot::function::ReplaceSectionListOperation.offset": "Przesunięcie sekcji która zostanie zastąpiona. Domyślnie `0`.",
	"::java::data::loot::function::ReplaceSectionListOperation.size": "Rozmiar sekcji która ma zostać zastąpiona. Domyślnie rozmiar nowej listy.",
	"::java::data::loot::function::Sequence.functions": "Lista funkcji która ma zostać zastosowana na tym przedmiocie.",
	"::java::data::loot::function::SetAttributes.modifiers": "Lista modyfikatorów atrybutów która ma zostać zastosowana na tym przedmiocie.",
	"::java::data::loot::function::SetAttributes.replace": "Określa czy zastępować istniejące atrybuty (w przeciwnym razie będą dopisywane do istniejących). Domyślnie `true`.",
	"::java::data::loot::function::SetBannerPattern.append": "Określa czy dodać do listy wzorów sztandarów.",
	"::java::data::loot::function::SetBannerPattern.patterns": "Lista warstw wzorów sztandaru.",
	"::java::data::loot::function::SetBookCover.author": "Jeśli nie podano, zostanie zachowany oryginalny autor (albo zostanie użyty pusty string, jeśli nie było komponentu).",
	"::java::data::loot::function::SetBookCover.generation": "Jeśli nie podano, zostanie zachowane oryginalne wydanie (albo zostanie użyte `0`, jeśli nie było komponentu).",
	"::java::data::loot::function::SetBookCover.title": "Jeśli nie podano, zostanie zachowany oryginalny tytuł (albo zostanie użyty pusty string, jeśli nie było komponentu).",
	"::java::data::loot::function::SetContents.component": "Opisuje komponent docelowy który ma zostać wypełniony przedmiotami.",
	"::java::data::loot::function::SetCount.add": "Określa czy dodać do istniejącej ilości. Domyślnie `false`.",
	"::java::data::loot::function::SetCustomModelData.value": "Tag który opisuje niestandardowy model który ma przyjąć przedmiot.\nUżywany przez model `custom_model_data`, zastępuje predykat.\nZawiera wiele ograniczeń z powodu konwersji typu float.",
	"::java::data::loot::function::SetDamage.add": "Określa czy dodać przedmiotowi istniejące uszkodzenia. Domyślnie `false`.",
	"::java::data::loot::function::SetDamage.damage": "Procent dziesiętny. Może być ujemny, gdy użyty razem z `add`.",
	"::java::data::loot::function::SetEnchantments.add": "Określa czy dodać do poziomu każdego z zaklęć. Domyślnie `false`.",
	"::java::data::loot::function::SetEnchantments.enchantments": "Mapa z zaklęciami i ich poziomami. Zaklęcie ustawione na poziom `0` usuwa je z przedmiotu.",
	"::java::data::loot::function::SetFireworkExplosion.colors": "Jeśli nie podano, zostaną zachowane oryginalne kolory (albo zostanie użyte `[]`, jeśli nie było komponentu).\nObliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie.",
	"::java::data::loot::function::SetFireworkExplosion.fade_colors": "Jeśli nie podano, zostaną zachowane oryginalne kolory przechodzące (albo zostanie użyte `[]`, jeśli nie było komponentu).\nObliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie.",
	"::java::data::loot::function::SetFireworkExplosion.shape": "Jeśli nie podano, zostanie zachowany oryginalny kształt (albo zostanie użyte `small_ball`, jeśli nie było komponentu).",
	"::java::data::loot::function::SetFireworkExplosion.trail": "Jeśli nie podano, zostanie zachowana oryginalna wartość `has_trail` (albo zostanie użyte `false`, jeśli nie było komponentu).",
	"::java::data::loot::function::SetFireworkExplosion.twinkle": "Jeśli nie podano, zostanie zachowana oryginalna wartość `has_twinkle` (albo zostanie użyte `false`, jeśli nie było komponentu).",
	"::java::data::loot::function::SetFireworks.flight_duration": "Jeśli nie podano, czas lotu przedmiotu nie zostanie zmieniony - lub przyjmie wartość `0` jeśli komponent dotychczas nie istniał.",
	"::java::data::loot::function::SetInstrument.options": "Ustawia tag instrumentu dla koziego rogu.",
	"::java::data::loot::function::SetLootTable.name": "Tablica łupów do ustawienia przedmiotowi bloku kontenera.",
	"::java::data::loot::function::SetLootTable.seed": "Ziarno kontenera które ma zostać użyte. Domyślnie losowe ziarno.",
	"::java::data::loot::function::SetLootTable.type": "Typ bytu blokowego kontenera.",
	"::java::data::loot::function::SetLore.entity": "Byt używany do rozwiązywania komponentów tekstowych.",
	"::java::data::loot::function::SetLore.replace": "Określa czy zastępować istniejącą listę \"lore\". Domyślnie `true`.",
	"::java::data::loot::function::SetName.entity": "Określa byt który ma się zachowywać jak cel `@s` w komponencie tekstowym JSON.",
	"::java::data::loot::function::SetName.target": "Ustala nazwę komponentu do ustawienia. Domyślnie `custom_name`.",
	"::java::data::loot::function::SetPotion.id": "Identyfikator mikstury.",
	"::java::data::loot::function::SetStewEffect.effects": "Ustawia efekty statusu podejrzanym potrawkom.",
	"::java::data::loot::function::SetWriteableBookPages.pages": "Ustawia liczbę stron książki z piórem.",
	"::java::data::loot::function::SetWrittenBookPages.pages": "Ustawia liczbę stron zapisanej książce.",
	"::java::data::loot::function::StewEffect.duration": "Długość tego efektu potrawki, w sekundach.",
	"::java::data::loot::function::StewEffect.type": "Efekt statusu tego efektu potrawki.",
	"::java::data::loot::function::ToggleTooltips.toggles": "Przełącza pomiędzy pokazywanymi opisami.",
	"::java::data::recipe::CraftingShaped.category": "Identyfikator kategorii w książce receptur.",
	"::java::data::recipe::CraftingShaped.group": "Identyfikator grupowania wielu receptur w książce receptur.",
	"::java::data::recipe::CraftingShaped.show_notification": "Określa czy ma być wyświetlany dymek po odblokowaniu tej receptury. Domyślnie `true`.",
	"::java::data::recipe::CraftingShapeless.category": "Identyfikator kategorii w książce receptur.",
	"::java::data::recipe::CraftingTransmute.category": "Identyfikator kategorii w książce receptur.",
	"::java::data::recipe::CraftingTransmute.input": "Składnik który przekaże swoje komponenty danych przedmiotowi wyjściowemu.",
	"::java::data::recipe::CraftingTransmute.material": "Dodatkowy składnik.",
	"::java::data::recipe::CraftingTransmute.result": "Przedmiot wyjściowy który zostanie scalony ze składnikiem wejściowym.",
	"::java::data::recipe::OptionalSmithingIngredients.addition": "Materiał który zostanie użyty (np. `#minecraft:trim_materials\"`).",
	"::java::data::recipe::OptionalSmithingIngredients.base": "Składnik określający przedmiot do ozdobienia (np. `\"#minecraft:trimmable_armor\"`).",
	"::java::data::recipe::OptionalSmithingIngredients.template": "Przedmiot szablonowy który zostanie użyty do wzoru.",
	"::java::data::recipe::RequiredSmithingIngredients.addition": "Materiał który zostanie użyty (np. `{ \"tag\": \"minecraft:trim_materials\" }`).",
	"::java::data::recipe::RequiredSmithingIngredients.base": "Składnik określający przedmiot do ozdobienia (np. `{ \"tag\": \"minecraft:trimmable_armor\" }`).",
	"::java::data::recipe::RequiredSmithingIngredients.template": "Przedmiot szablonowy który zostanie użyty do wzoru.",
	"::java::data::recipe::Smelting.category": "Identyfikator kategorii w książce receptur.",
	"::java::data::recipe::SmithingIngredients.addition": "Materiał który zostanie użyty (np. `#minecraft:trim_materials\"`).",
	"::java::data::recipe::SmithingIngredients.base": "Składnik określający przedmiot do ozdobienia (np. `\"#minecraft:trimmable_armor\"`).",
	"::java::data::recipe::SmithingIngredients.template": "Przedmiot szablonowy który zostanie użyty do wzoru.",
	"::java::data::recipe::SmithingTransform.addition": "Materiał który zostanie użyty.",
	"::java::data::recipe::SmithingTransform.base": "Składnik określający przedmiot do przekształcenia.",
	"::java::data::recipe::SmithingTransform.result": "Przekształcony przedmiot wyjściowy.",
	"::java::data::recipe::SmithingTransform.template": "Przedmiot szablonowy który zostanie użyty do wzoru.",
	"::java::data::recipe::SmithingTrim.addition": "Materiał który zostanie użyty.",
	"::java::data::recipe::SmithingTrim.base": "Składnik określający przedmiot do ozdobienia.",
	"::java::data::recipe::SmithingTrim.pattern": "Wzór zdobienia do zastosowania przedmiotowi wyjściowemu.",
	"::java::data::recipe::SmithingTrim.template": "Przedmiot szablonowy który zostanie użyty do wzoru.",
	"::java::data::structure::BlockPalette.palettes": "Zbiór różnych stanów bloków użytych w strukturze, losowa paleta zostaje wybrana w zależności od koordynatów.",
	"::java::data::structure::RandomizedPalette.palettes": "Zbiór różnych stanów bloków użytych w strukturze, losowa paleta zostaje wybrana w zależności od koordynatów.",
	"::java::data::structure::StructureNBT.DataVersion": "[Wersja danych] (https://minecraft.wiki/w/Data_version).",
	"::java::data::trial_spawner::TrialSpawnerConfig.loot_tables_to_eject": "Tablica łupów używana podczas wyrzucaniu łupu. Wybiera jedną tabelę łupów w oparciu o wysokość, a następnie używa jej tak często, jak tylko w pobliżu są gracze.",
	"::java::data::trial_spawner::TrialSpawnerConfig.simultaneous_mobs": "Ilość bytów które mogą być obecne naraz, gdy 1 gracz jest w pobliżu.",
	"::java::data::trial_spawner::TrialSpawnerConfig.simultaneous_mobs_added_per_player": "Liczba dodawana do `simultaneous_mobs` za każdego dodatkowego gracza.",
	"::java::data::trial_spawner::TrialSpawnerConfig.spawn_potentials": "Byty które mogą zostać umieszczone.",
	"::java::data::trial_spawner::TrialSpawnerConfig.spawn_range": "Maksymalna odległość od spawnera którą byt może zespawnować.",
	"::java::data::trial_spawner::TrialSpawnerConfig.ticks_between_spawn": "Liczba ticków do następnego spawnu.",
	"::java::data::trial_spawner::TrialSpawnerConfig.total_mobs": "Łączna ilość bytów która jest spawnowana w czasie jednej aktywacji, gdy 1 gracz jest w pobliżu.",
	"::java::data::trial_spawner::TrialSpawnerConfig.total_mobs_added_per_player": "Liczba dodawana do `total_mobs` za każdego dodatkowego gracza.",
	"::java::data::trim::TrimMaterial.asset_name": "ID które zostanie wzięte z paczki zasobów.",
	"::java::data::trim::TrimMaterial.description": "Tekst wyświetlany w opisie przedmiotu.",
	"::java::data::trim::TrimMaterial.ingredient": "Przedmiot użyty na stole kowalskim dla tego materiału.",
	"::java::data::trim::TrimMaterial.item_model_index": "Float predykatu modelu zastępującego.",
	"::java::data::trim::TrimMaterial.override_armor_materials": "Materiały zbroi które powinny posiadać odmienną paletę kolorów.",
	"::java::data::trim::TrimPattern.asset_id": "ID wzoru który zostanie wzięty z paczki zasobów jako nakładka na zbroję.",
	"::java::data::trim::TrimPattern.decal": "Określa czy tekstura wzoru będzie zamaskowana w oparciu o leżącą pod nią zbroją. Domyślnie `false`.",
	"::java::data::trim::TrimPattern.description": "Tekst wyświetlany w opisie przedmiotu.",
	"::java::data::trim::TrimPattern.template_item": "Przedmiot użyty na stole kowalskim dla tego wzoru.",
	"::java::data::util::SoundEventRef": "Serwerowe zdarzenia dźwiękowe używają statycznego rejestru, więc nie można ich modyfikować paczkami danych.\nNiestandardowe zdarzenia dźwiękowe można zdefiniować wstawką, odnosząc się do sound_id klienta.",
	"::java::data::util::SoundEventRef.range": "Zasięg źródła dźwięku wyrażany w blokach. Jeśli gracz znajduje się poza tym zasięgiem, dźwięk będzie niesłyszalny. Jeśli nie podano, dźwięk będzie miał zmienny zasięg.",
	"::java::data::util::WeightedSoundEvent.range": "Zasięg źródła dźwięku wyrażany w blokach. Jeśli gracz znajduje się poza tym zasięgiem, dźwięk będzie niesłyszalny. Jeśli nie podano, dźwięk będzie miał zmienny zasięg.",
	"::java::data::variants::BiomeCheck.biomes": "Sprawdza czy byt spawnuje się na określonych biomach.",
	"::java::data::variants::MoonBrightnessCheck.range": "Sprawdza czy aktualna jasność księżyca znajduje się w podanym zakresie.",
	"::java::data::variants::SpawnPrioritySelector.condition": "Warunek spawnu do sprawdzenia. Jeśli nie istnieje, warunek zawsze pasuje.",
	"::java::data::variants::SpawnPrioritySelector.priority": "Priorytet spawnu, który ma zostać użyty.",
	"::java::data::variants::SpawnPrioritySelectors.spawn_conditions": "Warunku spawnu dla tego wariantu. Proces selekcji przebiega następująco:\n- Warunki dla wszystkich wariantów danego bytu są szacowane pod kątem pozycji spawnu.\n- Wpisy z niższym priorytetem od najwyższego są usuwane\n- Jeden losowy wpis jest wybierany spośród pozostałych\n- Jeśli nie ma żadnych pozostałych warunków, wariant pozostaje niezmieniony",
	"::java::data::variants::StructureCheck.structures": "Sprawdza czy byt spawnuje się w specyficznych strukturach.",
	"::java::data::variants::banner_pattern::BannerPattern.asset_id": "Rozwiązuje również `assets/<przestrzen_nazw>/textures/entity/shield/<nazwa>.png`.",
	"::java::data::variants::banner_pattern::BannerPattern.translation_key": "Prefix klucza tłumaczenia na kolor barwnika (np. `block.minecraft.banner.custom.pattern` rozwiązywany jest na `block.minecraft.banner.custom.pattern.<kolor_barwnika>`).",
	"::java::data::variants::cat::CatVariant.asset_id": "Tekstura sierściucha, której używa ten wariant.",
	"::java::data::variants::chicken::ChickenVariant.asset_id": "Tekstura kurczaka, której używa ten wariant.",
	"::java::data::variants::cow::CowVariant.asset_id": "Tekstura krowy, której używa ten wariant.",
	"::java::data::variants::frog::FrogVariant.asset_id": "Tekstura żaby, której używa ten wariant.",
	"::java::data::variants::instrument::Instrument.range": "Maksymalny zasięg wyrażany w blokach, w którym można usłyszeć dźwięk.",
	"::java::data::variants::instrument::Instrument.use_duration": "Długość użycia wyrażana w sekundach, używana jako czas przed ponownym użyciem.",
	"::java::data::variants::jukebox_song::JukeboxSong.description": "Wyświetlany w HUDzie na pasku akcji i w opisie przedmiotu.",
	"::java::data::variants::painting::PaintingVariant.height": "Wysokość wyrażana w blokach.",
	"::java::data::variants::painting::PaintingVariant.width": "Szerokość wyrażana w blokach.",
	"::java::data::variants::pig::PigVariant.asset_id": "Tekstura świni, której używa ten wariant.",
	"::java::data::variants::wolf::WolfVariant.assets": "Zbiór tekstur, których używa ten wariant wilka.",
	"::java::data::worldgen::biome::Biome.depth": "Podwyższa bądź obniża teren. Dodatnie wartości są uznawane za lądy, ujemne za oceany.",
	"::java::data::worldgen::biome::Biome.player_spawn_friendly": "Jeśli `true`, spawn świata będzie preferowany na tym biomie.",
	"::java::data::worldgen::biome::Biome.scale": "Rozciąga teren w pionie. Niższe wartości tworzą bardziej płaski teren.",
	"::java::data::worldgen::biome::BiomeEffects.music_volume": "Głośność muzyki na tym biomie. Domyślnie `1`.\nGra będzie robić gładkie przejścia pomiędzy aktualną głośnością muzyki a nową głośnością podczas wchodzenia na biom.",
	"::java::data::worldgen::dimension::DimensionType.bed_works": "Jeśli `true`, gracze mogą używać łóżek do ustawiania swojego miejsca spawnu, bądź pomijania czasu. Jeśli `false`, łóżka będą wybuchać przy próbie użycia.",
	"::java::data::worldgen::dimension::DimensionType.cloud_height": "Współrzędna Y na której zaczynają się chmury w tym wymiarze. Jeśli nie podano, chmury nie będą widoczne.",
	"::java::data::worldgen::dimension::DimensionType.effects": "Efekty nieba.",
	"::java::data::worldgen::dimension::DimensionType.fixed_time": "Ustawienie tej wartości spowoduje zatrzymanie słońca na stałej pozycji.",
	"::java::data::worldgen::dimension::DimensionType.has_ceiling": "Wpływa na pogodę, mapy oraz zasady respawnowania.",
	"::java::data::worldgen::dimension::DimensionType.has_raids": "Jeśli `true`, gracze z efektem Zły omen mogą wywołać najazd.",
	"::java::data::worldgen::dimension::DimensionType.has_skylight": "Wpływa na pogodę, silnik światła oraz zasady respawnowania.",
	"::java::data::worldgen::dimension::DimensionType.height": "Łączna wysokość na której mogą stać bloki. Maksymalna wysokość = `min_y` + `height` - 1.",
	"::java::data::worldgen::dimension::DimensionType.infiniburn": "Tag bloków określający bloki, które mogą palić się wiecznie.",
	"::java::data::worldgen::dimension::DimensionType.logical_height": "Powyżej tej wysokości portale nie mogą się pojawiać, a także owoce refrenusu nie mogą teleportować graczy.",
	"::java::data::worldgen::dimension::DimensionType.min_y": "Minimalna wysokość na której mogą stać bloki.",
	"::java::data::worldgen::dimension::DimensionType.natural": "Jeśli `true`, portale będą spawnować zzombifikowane pigliny. Jeśli `false`, kompasy i zegary zaczną kręcić śmigła dookoła tarczy.",
	"::java::data::worldgen::dimension::DimensionType.piglin_safe": "Jeśli `false`, pigliny zaczną sie trząść aż zmienią się w zzombifikowane pigliny.",
	"::java::data::worldgen::dimension::DimensionType.respawn_anchor_works": "Jeśli `true`, gracze mogą ładować i używać kotwic odrodzenia do ustawiania swojego miejsca spawnu. Jeśli `false`, kotwice odrodzenia będą wybuchać.",
	"::java::data::worldgen::dimension::DimensionType.ultrawarm": "Jeśli `true`, woda będzie wyparowywać, a gąbki będą wysychać.",
	"::java::data::worldgen::feature::DripstoneClusterConfig.max_stalagmite_stalactite_height_diff": "Maksymalna różnica wysokości pomiędzy stalagmitami a stalaktytami.",
	"::java::data::worldgen::feature::FossilConfig.max_empty_corners_allowed": "Jeśli więcej rogów jest wystawionych na powietrze, stawianie tworu zostanie anulowane.",
	"::java::data::worldgen::feature::GeodeBlockSettings.cannot_replace": "Bloki które nie zostaną zastąpione geodą.",
	"::java::data::worldgen::feature::GeodeBlockSettings.invalid_blocks": "Jeśli zostanie napotkany nieprawidłowy blok, stawianie tworu zostanie anulowane.",
	"::java::data::worldgen::feature::ModernPatchConfig.xz_spread": "Domyślnie `7`.",
	"::java::data::worldgen::feature::ModernPatchConfig.y_spread": "Domyślnie `3`.",
	"::java::data::worldgen::feature::OreConfig.discard_chance_on_air_exposure": "Szansa z jaką stawianie tworu zostanie anulowane, jeśli ruda jest wystawiona na bloki powietrza.",
	"::java::data::worldgen::feature::RandomPatchConfig.xz_spread": "Domyślnie `7`.",
	"::java::data::worldgen::feature::RandomPatchConfig.y_spread": "Domyślnie `3`.",
	"::java::data::worldgen::feature::SimpleBlockConfig.schedule_tick": "Określa czy ma być planowana aktualizacja bloku. Domyślnie `false`.",
	"::java::data::worldgen::feature::block_predicate::PredicateOffset.offset": "Offset bloków do sprawdzenia.",
	"::java::data::worldgen::feature::placement::FixedPlacementModifier.positions": "Stała lista pozycji bloków, na których umieszczać twór.",
	"::java::data::worldgen::feature::tree::PlaceOnGroundTreeDecorator.block_state_provider": "Blok do postawienia na gruncie.",
	"::java::data::worldgen::feature::tree::PlaceOnGroundTreeDecorator.height": "Domyślnie `1`.",
	"::java::data::worldgen::feature::tree::PlaceOnGroundTreeDecorator.radius": "Domyślnie `2`.",
	"::java::data::worldgen::feature::tree::PlaceOnGroundTreeDecorator.tries": "Domyślnie `128`.",
	"::java::data::worldgen::noise_settings::NoiseGeneratorSettings.bedrock_roof_position": "Względna pozycja bedrockowego dachu, zaczynając od wysokości świata. Wyższe wartości obniżają dach w dół.",
	"::java::data::worldgen::noise_settings::NoiseGeneratorSettings.disable_mob_generation": "Jeśli `true`, moby nie będą się spawnować podczas generowania.",
	"::java::data::worldgen::noise_settings::NoiseSettings.bottom_slide": "Zwiększa lub zmniejsza teren na dnie świata. Nie robi nic jeśli rozmiar ma wartość `0`.",
	"::java::data::worldgen::noise_settings::NoiseSettings.height": "Łączna wysokość na której bloki mogą się generować. Maksymalna wysokość = `min_y` + `height` - 1.",
	"::java::data::worldgen::noise_settings::NoiseSettings.island_noise_override": "Jeśli `true`, teren przybierze kształt wysp, podobnych do wysp w Endzie.",
	"::java::data::worldgen::noise_settings::NoiseSettings.min_y": "Minimalna wysokość na której bloki zaczynają się generować.",
	"::java::data::worldgen::noise_settings::NoiseSettings.top_slide": "Zwiększa lub zmniejsza teren na szczycie świata. Nie robi nic jeśli rozmiar ma wartość `0`.",
	"::java::data::worldgen::structure::JigsawDistanceLimits.vertical": "Domyślnie `4096`.",
	"::java::data::worldgen::structure::Structure.adapt_noise": "Ustala czy dodawać dodatkowego terenu poniżej struktury.",
	"::java::util::Filterable.filtered": "Pokazywane jedynie graczom z włączonym filtrem czatu.",
	"::java::util::FilteredText.filtered": "Pokazywane jedynie graczom z włączonym filtrem czatu.",
	"::java::util::GlobalPos.dimension": "Wymiar lokacji.",
	"::java::util::GlobalPos.pos": "Koordynaty lokacji wyrażane poprzez [x, y, z].",
	"::java::util::avatar::Profile.id": "UUID posiadacza. Używane do aktualizacji pozostałych tagów gdy chunk się wczyta lub posiadacz się zaloguje do gry, w przypadku gdy nazwa posiadacza się zmieniła.",
	"::java::util::avatar::Profile.name": "Nazwa użytkownika profilu gracza.",
	"::java::util::avatar::Profile.properties": "Rozwiązane tekstury hostowane na serwerze CDN Minecrafta.",
	"::java::util::avatar::ProfileProperty.name": "Zazwyczaj `textures`.",
	"::java::util::avatar::ProfileProperty.signature": "Weryfikuje hash następującej tekstury.",
	"::java::util::avatar::ProfilePropertyMap.[string]": "Kluczem jest zazwyczaj `textures`.\nWartość JSON indeksu tekstury, zakodowana w Base64.",
	"::java::util::effect::EffectByteId": "Numeryczne ID efektu.",
	"::java::util::effect::MobEffectInstance.Ambient": "Określa czy cząsteczki mają być półprzezroczyste (tak jak z beaconem).",
	"::java::util::effect::MobEffectInstance.Duration": "Czas trwania efektu wyrażany w tickach. `-1` oznacza nieskończony czas.",
	"::java::util::effect::MobEffectInstance.HiddenEffect": "Efekt tego samego typu o niższej mocy.",
	"::java::util::effect::MobEffectInstance.ShowIcon": "Określa czy ikonka efektu powinna być widoczna.",
	"::java::util::effect::MobEffectInstance.ShowParticles": "Określa czy cząsteczki powinny być widoczne.",
	"::java::util::effect::MobEffectInstance.ambient": "Określa czy efekt ma być wyświetlany nie tylko w ekwipunku, ale również jako ikonka na HUDzie (w ten sam sposób co efekty beacona, jeśli `true`). Domyślnie `false`.",
	"::java::util::effect::MobEffectInstance.amplifier": "Poziom I posiadający wartość 0. Domyślnie `0`.",
	"::java::util::effect::MobEffectInstance.duration": "Czas trwania efektu wyrażany w tickach. `-1` oznacza nieskończony czas.",
	"::java::util::effect::MobEffectInstance.hidden_effect": "Efekt tego samego typu o niższej mocy.",
	"::java::util::effect::MobEffectInstance.show_icon": "Określa czy efekt pojawia się w GUI ekwipunku. Domyślnie `true`.",
	"::java::util::effect::MobEffectInstance.show_particles": "Domyślnie `true`.",
	"::java::util::effect::ModernMobEffect.ambient": "Określa czy efekt ma być wyświetlany nie tylko w ekwipunku, ale również jako ikonka na HUDzie (w ten sam sposób co efekty beacona, jeśli `true`). Domyślnie `false`.",
	"::java::util::effect::ModernMobEffect.amplifier": "Poziom I posiadający wartość 0. Domyślnie `0`.",
	"::java::util::effect::ModernMobEffect.duration": "Czas trwania efektu wyrażany w tickach. `-1` oznacza nieskończony czas.",
	"::java::util::effect::ModernMobEffect.hidden_effect": "Efekt tego samego typu o niższej mocy.",
	"::java::util::effect::ModernMobEffect.show_icon": "Określa czy efekt pojawia się w GUI ekwipunku. Domyślnie `true`.",
	"::java::util::effect::ModernMobEffect.show_particles": "Domyślnie `true`.",
	"::java::util::effect::OldMobEffect.Ambient": "Określa czy cząsteczki mają być półprzezroczyste (tak jak z beaconem).",
	"::java::util::effect::OldMobEffect.Duration": "Czas trwania efektu wyrażany w tickach. `-1` oznacza nieskończony czas.",
	"::java::util::effect::OldMobEffect.HiddenEffect": "Efekt tego samego typu o niższej mocy.",
	"::java::util::effect::OldMobEffect.ShowIcon": "Określa czy ikonka efektu powinna być widoczna.",
	"::java::util::effect::OldMobEffect.ShowParticles": "Określa czy cząsteczki powinny być widoczne.",
	"::java::util::game_event::BlockPositionSource.pos": "Pozycja bloku.",
	"::java::util::game_event::ReceivingEvent.distance": "Dystans do źródła wyrażany w blokach.",
	"::java::util::game_event::ReceivingEvent.pos": "Pochodzenie zdarzenia",
	"::java::util::game_event::ReceivingEvent.projectile_owner": "UUID właściciela pocisku, jeśli takowy istnieje.",
	"::java::util::game_event::ReceivingEvent.source": "UUID bytu źródłowego zdarzenia, jeśli takowy istnieje.",
	"::java::util::game_event::VibrationListener.event": "Zdarzenie które zostało odebrane, o ile zaistniało.",
	"::java::util::game_event::VibrationListener.event_delay": "Opóźnienie wyrażane w tickach zanim zdarzenie dotrze do odbiorcy.",
	"::java::util::game_event::VibrationListener.event_distance": "Dystans wyrażany w blokach do otrzymywanego zdarzenia.",
	"::java::util::game_event::VibrationListener.range": "Zasięg w blokach w którym wibracje mogą zostać wykryte.",
	"::java::util::memory::AdmiringDisable.value": "Określa czy piglin nie może podziwiać przedmiotu.\nUstawiane podczas przemiany, atakowania bądź podziwiania przedmiotu.",
	"::java::util::memory::AdmiringItem.value": "Określa czy piglin właśnie podziwia przedmiot.",
	"::java::util::memory::AngryAt.value": "Cel piglina lub piglina okrutnika.",
	"::java::util::memory::DangerDetectedRecently.value": "Określa czy pancernik wykrył niedawno zagrożenie.",
	"::java::util::memory::DigCooldown.value": "Jeśli podano, warden nie będzie się wkopywać w grunt.",
	"::java::util::memory::ExpirableValue.ttl": "Jeśli podano, ticki przed tą pamięcią są automatycznie usuwane.",
	"::java::util::memory::GazeCooldownTicks.value": "Liczba ticków zanim pancernik lub lama będzie znowu mogła losowo się rozglądać.",
	"::java::util::memory::GolemDetectedRecently.value": "Określa czy osadnik wykrył niedawno żelaznego golema.",
	"::java::util::memory::HasHuntingCooldown.value": "Określa czy aksolotl musi odczekać przed następnymi łowami.",
	"::java::util::memory::Home.value": "Pozycja mieszkania osadnika.",
	"::java::util::memory::HuntedRecently.value": "Określa czy piglin polował w ostatnim czasie.\nUstawiane po łowach bądź po zespawnowaniu się w pozostałościach bastionu.",
	"::java::util::memory::IsEmerging.value": "Określa czy nadzorca wynurza się właśnie z gruntu.",
	"::java::util::memory::IsInWater.value": "Określa czy żaba znajduje się aktualnie w wodzie.",
	"::java::util::memory::IsPanicking.value": "Określa czy mob w tej chwili panikuje.",
	"::java::util::memory::IsPregnant.value": "Określa czy żaba zaciążyła.",
	"::java::util::memory::IsSniffing.value": "Określa czy nadzorca bądź niuchacz aktualnie wącha.",
	"::java::util::memory::IsTempted.value": "Określa czy mob jest właśnie kuszony przez gracza.",
	"::java::util::memory::ItemPickupCooldownTicks.value": "Liczba ticków zanim otuszek ponownie podleci zebrać przedmiot.",
	"::java::util::memory::JobSite.value": "Pozycja miejsca pracy osadnika.",
	"::java::util::memory::LastSlept.value": "Tick czasu gry w w którym osadnik ostatnio spał.",
	"::java::util::memory::LastWoken.value": "Tick czasu gry w w którym osadnik ostatnio wstał z łóżka.",
	"::java::util::memory::LastWorkedAtPoi.value": "Tick czasu gry w w którym osadnik ostatnio pracował przy swoim stanowisku.",
	"::java::util::memory::LikedNoteblock.value": "Pozycja i wymiar bloku dźwiękowego, którego polubił otuszek.",
	"::java::util::memory::LikedNoteblockCooldownTicks.value": "Liczba ticków zanim otuszek przestanie kłaść przedmioty na polubionym bloku dźwiękowym.",
	"::java::util::memory::LikedPlayer.value": "UUID gracza którego otuszek darzy sympatią.",
	"::java::util::memory::LongJumpCoolingDown.value": "Liczba ticków zanim koza będzie znowu mogła wykonać długi skok.",
	"::java::util::memory::MeetingPoint.value": "Pozycja punktu spotkania osadnika.",
	"::java::util::memory::PlayDeadTicks.value": "Liczba ticków zanim aksolotl przestanie udawać trupa.",
	"::java::util::memory::PotentialJobSite.value": "Pozycja potencjalnego miejsca pracy osadnika.",
	"::java::util::memory::RamCooldownTicks.value": "Liczba ticków zanim koza będzie mogła znowu bość.",
	"::java::util::memory::RecentProjectile.value": "Określa czy nadzorca zwrócił ostatnio uwagę na wibrację pocisku.",
	"::java::util::memory::RoarSoundCooldown.value": "Jeśli podano, nadzorca nie będzie ryczeć.",
	"::java::util::memory::RoarSoundDelay.value": "Jeśli podano, nadzorca nie będzie ryczeć.",
	"::java::util::memory::SniffCooldown.value": "Jeśli podano, nadzorca lub niuchacz nie będzie wąchać.",
	"::java::util::memory::SnifferExploredPositions.value": "Pozycje ostatnich 20 bloków, które niuchacz przekopał. Niuchacz nie będzie kopać w tych miejscach.",
	"::java::util::memory::SonicBoomCooldown.value": "Jeśli podano, nadzorca nie będzie atakować falą dźwiękową.",
	"::java::util::memory::SonicBoomSoundCooldown.value": "Jeśli podano, animacja fali dźwiękowej nadzorcy nie będzie emitować cząsteczek ani odtwarzać dźwięku.",
	"::java::util::memory::SonicBoomSoundDelay.value": "Jeśli podano, animacja fali dźwiękowej nadzorcy zostanie opóźniona.",
	"::java::util::memory::TemptationCooldownTicks.value": "Liczba ticków zanim znowu będzie można kusić moba.",
	"::java::util::memory::TouchCooldown.value": "Jeśli podano, nadzorca nie będzie reagować jeśli inny mob go popchnie. Ustawiane na 20 gdy zostaje dotknięty.",
	"::java::util::memory::UniversalAnger.value": "Określa czy piglin jest ogólnie wścieknięty. Używane tylko wtedy gdy zasada gry `universalAnger` jest włączona.",
	"::java::util::memory::VibrationCooldown.value": "Jeśli podano, nadzorca nie będzie reagować na wibracje. Ustawiane na 40 gdy wibracja do niego dotrze.",
	"::java::util::particle::DustColor": "Losowy kolor interpretowany na podstawie trzech floatów.\n\nŚciągawka:\n- Floaty pomiędzy 0 a 1 są uznawane za procent oryginalnego koloru. Gdy floaty są poza zakresem, dzieją się różne dziwactwa.\n- Na każdy kanał dodawane jest 0-20% przyciemnienia.\n- Ostateczny kolor jest ciemniejszy o 0-40%.\n- `1e100000f` daje stały kanał bez losowości.\n\nWewnętrzne zachowanie w uproszczeniu ([demo na wykresie] (https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\nif (integer >= 0) {\n// Integer is positive\nif (integer <= 255) {\n// Integer already fits in a color channel\nreturn integer\n}\n// Integer doesn't fit in color channel; modulo it\nreturn integer % 256\n}\n// Integer is negative\nreturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n\nvar baseShade = randomBetween(0.6, 1),\nr = integerToByte(Math.floor(color[0] * randomBetween(0.8, 1) * baseShade * 255)),\ng = integerToByte(Math.floor(color[1] * randomBetween(0.8, 1) * baseShade * 255)),\nb = integerToByte(Math.floor(color[2] * randomBetween(0.8, 1) * baseShade * 255))\n```",
	"::java::util::particle::EntityEffectParticle.color": "Przezroczysty kolor interpretowany na podstawie czterech floatów.\n\nŚciągawka:\n- Floaty pomiędzy 0 a 1 są uznawane za procent oryginalnego koloru.\n- Ujemne wartości oraz wartości powyżej 1 będą zwyczajnie zapętlać zakres 0-255; w tym przypadku nie dzieją się żadne dziwactwa, ponieważ nic tutaj się nie losuje.\n\nWewnętrzne zachowanie w uproszczeniu ([demo na wykresie] (https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\nif (integer >= 0) {\n// Integer is positive\nif (integer <= 255) {\n// Integer already fits in a color channel\nreturn integer\n}\n// Integer doesn't fit in color channel; modulo it\nreturn integer % 256\n}\n// Integer is negative\nreturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n```",
	"::java::util::particle::SculkChargeParticle.roll": "Kąt z jakim tekstura cząsteczki jest obrócona, mierzony w radianach (π ~ 3.14 dla obrotu o 180° zgodnie z ruchem wskazówek zegara, ujemna liczba obraca w przeciwną stronę).",
	"::java::util::particle::ShriekParticle.delay": "Liczba ticków do następnego renderowania cząsteczki.",
	"::java::util::particle::VibrationParticleData.arrival_in_ticks": "Liczba ticków w których interpolować początkową pozycję cząsteczki z jej celem.",
	"::java::util::slot::SlottedItem.Slot": "Slot w ekwipunku, w którym znajduje się przedmiot",
	"::java::util::text::ChangePage.page": "Numer strony na który przejść.",
	"::java::util::text::ChangePage.value": "Numer strony na który przejść.",
	"::java::util::text::CopyToClipboard.value": "Wartość tekstowa, która ma zostać skopiowana do schowka.",
	"::java::util::text::CustomAction.id": "ID niestandardowej akcji.\nNie ma żadnego zastosowania na serwerach vanilla.",
	"::java::util::text::SpriteText.atlas": "Domyślnie `minecraft:blocks`.",
	"::java::util::text::TextObject.atlas": "Domyślnie `minecraft:blocks`.",
	"::java::util::text::TextStyle.shadow_color": "Nadpisuje parametry cienia tekstu.\nJeśli `0`, cień nie będzie wcale wyświetlany.",
	"::java::world::block::BlockEntity.keepPacked": "Nieznane.\n`0` dla zwykłych bytów blokowych.",
	"::java::world::block::Lockable.Lock": "Nazwa przedmiotu który gracz musi trzymać aby otworzyć ten pojemnik.\nPrzed sprawdzeniem źródło zostaje spłaszczone do samego tekstu, wszelkie formatowanie zostaje usunięte.",
	"::java::world::block::Lockable.lock": "Predykat przedmiotu testujący przedmiot który musi trzymać gracz aby otworzyć pojemnik.",
	"::java::world::block::Nameable.CustomName": "Niestandardowa nazwa tego bloku.",
	"::java::world::block::banner::BannerPatternLayer.Color": "Kolor barwnika wzoru.",
	"::java::world::block::banner::BannerPatternLayer.Pattern": "ID wzoru.",
	"::java::world::block::banner::BannerPatternLayer.color": "Kolor barwnika wzoru.",
	"::java::world::block::banner::BannerPatternLayer.pattern": "Wzór sztandaru.",
	"::java::world::block::banner::BannerPatternType.Border": "Krawędź (Obramowanie).",
	"::java::world::block::beacon::Beacon.Levels": "Liczba poziomów piramidy.",
	"::java::world::block::beacon::Beacon.Primary": "Efekt mikstury.",
	"::java::world::block::beacon::Beacon.Secondary": "Efekt mikstury.",
	"::java::world::block::brewing_stand::BrewingStand.BrewTime": "Liczba ticków zanim zakończy się warzenie.",
	"::java::world::block::brewing_stand::BrewingStand.Fuel": "Liczba paliwa pozostałego w statywie.",
	"::java::world::block::brewing_stand::BrewingStand.Items": "* 0: lewy slot\n* 1: środkowy slot\n* 2: prawy slot\n* 3: slot na składnik\n* 4: slot na paliwo",
	"::java::world::block::brushable_block::BrushableBlock.hit_direction": "Kierunek bloku z którym z którym doszło do interakcji.\nTylko do zapisu; nie jest to zapisywane przez grę.",
	"::java::world::block::chiseled_bookshelf::ChiseledBookshelf.Items": "Slot od 0 do 5.",
	"::java::world::block::command_block::BaseCommandBlock.Command": "Komenda do wykonania.",
	"::java::world::block::command_block::BaseCommandBlock.LastExecution": "Liczba ticków od ostatniego wykonania funkcji.",
	"::java::world::block::command_block::BaseCommandBlock.LastOutput": "Dane wyjściowe ostatniej komendy.",
	"::java::world::block::command_block::BaseCommandBlock.SuccessCount": "Liczba sukcesów ostatniej komendy.",
	"::java::world::block::command_block::BaseCommandBlock.TrackOutput": "Określa czy przechowywać dane wyjściowe komendy.",
	"::java::world::block::command_block::BaseCommandBlock.UpdateLastExecution": "Określa czy przechowywać tick ostatnio wykonanej komendy.",
	"::java::world::block::command_block::CommandBlock.auto": "Określa czy jest samoczynnie zasilany.",
	"::java::world::block::command_block::CommandBlock.conditionMet": "Określa czy poprzedni blok poleceń osiągnął sukces gdy komenda została wykonana.\nBezwarunkowe bloki poleceń zawsze zwracają sukces.",
	"::java::world::block::command_block::CommandBlock.powered": "Określa czy jest zasilony redstonem.",
	"::java::world::block::comparator::Comparator.OutputSignal": "Siła redstone'a na wyjściu.",
	"::java::world::block::conduit::Conduit.Target": "Wrogi mob aktualnie atakowany przez przewodnię.",
	"::java::world::block::conduit::Conduit.target_uuid": "Wrogi mob aktualnie atakowany przez przewodnię.",
	"::java::world::block::conduit::TargetUuid.L": "Niższe bity docelowego UUID",
	"::java::world::block::conduit::TargetUuid.M": "Wyższe bity docelowego UUID",
	"::java::world::block::container::Container27.Items": "Sloty od 0 do 26.",
	"::java::world::block::container::Container9.Items": "Sloty od 0 do 8.",
	"::java::world::block::container::ContainerBase.LootTable": "Tabela łupów która ma wypełniać kontener.",
	"::java::world::block::container::ContainerBase.LootTableSeed": "Ziarno tabeli łupów.",
	"::java::world::block::container::Hopper.Items": "Sloty od 0 do 4.",
	"::java::world::block::container::Hopper.TransferCooldown": "Liczba ticków do transferu kolejnego przedmiotu.",
	"::java::world::block::container::Shelf.Items": "Sloty od 0 do 2.",
	"::java::world::block::creaking_heart::CreakingHeart.creaking": "Trzeszczący mob połączony do tego serca.",
	"::java::world::block::decorated_pot::DecoratedPot.LootTable": "Tabela łupów która ma wypełniać kontener.",
	"::java::world::block::decorated_pot::DecoratedPot.LootTableSeed": "Ziarno tabeli łupów.",
	"::java::world::block::decorated_pot::DecoratedPot.sherds": "ID przedmiotu użytego z każdej strony garnca.",
	"::java::world::block::end_gateway::EndGateway.Age": "Ticki w grze.",
	"::java::world::block::end_gateway::EndGateway.ExactTeleport": "Określa czy teleportować do dokładnej lokacji.",
	"::java::world::block::end_gateway::EndGateway.ExitPortal": "Koordynaty w które teleportować byty.",
	"::java::world::block::end_gateway::EndGateway.exit_portal": "Koordynaty w które teleportować byty.",
	"::java::world::block::furnace::Furnace.BurnTime": "Liczba ticków zanim wypali się aktualne paliwo.",
	"::java::world::block::furnace::Furnace.CookTime": "Liczba ticków jaka zeszła na przetapianiu tego przedmiotu.",
	"::java::world::block::furnace::Furnace.CookTimeTotal": "Łączna liczba ticków jaka zajmie przedmiotowi by się przetopić.",
	"::java::world::block::furnace::Furnace.Items": "Przedmioty w piecu, w następujących slotach:\n* 0: Przedmiot aktualnie przetapiany\n* 1: Paliwo\n* 2: Przedmiot wyjściowy",
	"::java::world::block::furnace::Furnace.RecipesUsed.[string]": "Jak wiele razy użyto tej receptury.",
	"::java::world::block::furnace::Furnace.cooking_time_spent": "Liczba ticków jaka zeszła na przetapianiu tego przedmiotu.",
	"::java::world::block::furnace::Furnace.cooking_total_time": "Łączna liczba ticków jaka zajmie przedmiotowi by się przetopić.",
	"::java::world::block::furnace::Furnace.lit_time_remaining": "Liczba ticków zanim wypali się aktualne paliwo.",
	"::java::world::block::furnace::Furnace.lit_total_time": "Łączna liczba ticków określająca ile się będzie palić to paliwo.",
	"::java::world::block::furnace::RecipesUsed.[string]": "Jak wiele razy użyto tej receptury.",
	"::java::world::block::head::Skull.ExtraType": "Nazwa właściciela; jeśli istnieje, zostatnie przekonwertowany na `SkullOwner`.",
	"::java::world::block::head::Skull.Owner": "Właściciel głowy.",
	"::java::world::block::head::Skull.note_block_sound": "Dźwięk jaki ma zostać odtworzony na bloku dźwiękowym.\nDziała tylko z głowami graczy.",
	"::java::world::block::head::Skull.profile": "Działa tylko z głowami graczy.",
	"::java::world::block::head::SkullOwner.Id": "Opcjonalne.",
	"::java::world::block::head::SkullOwner.Name": "Jeśli nie podano, przybiera wygląd głowy Steve'a.",
	"::java::world::block::head::Texture.Value": "Wartość JSON indeksu tekstury, zakodowana w Base64.",
	"::java::world::block::jigsaw::Jigsaw.attachment_type": "ID typu konstrukcji z którym będzie się łączono.",
	"::java::world::block::jigsaw::Jigsaw.final_state": "Finalny stan bloku w konstrukcji.",
	"::java::world::block::jigsaw::Jigsaw.joint": "Określa jak wyjściowa struktura może zostać przekształcona.",
	"::java::world::block::lectern::Lectern.Page": "Aktualna strona na której znajduje się książka.",
	"::java::world::block::moving_piston::MovingPiston.blockState": "Ruchomy blok reprezentowany przez pracujący tłok.",
	"::java::world::block::moving_piston::MovingPiston.facing": "Kierunek w którym się przesuwa.",
	"::java::world::block::moving_piston::MovingPiston.progress": "Określa jak daleko się przesunął.",
	"::java::world::block::moving_piston::MovingPiston.source": "Określa czy ten ruchomy tłok jest głową tłoka.",
	"::java::world::block::sign::OldSign.Color": "Kolor na jaki tekst został zabarwiony.",
	"::java::world::block::sign::OldSign.Text1": "Pierwsza linia tekstu.",
	"::java::world::block::sign::OldSign.Text2": "Druga linia tekstu.",
	"::java::world::block::sign::OldSign.Text3": "Trzecia linia tekstu.",
	"::java::world::block::sign::OldSign.Text4": "Czwarta linia tekstu.",
	"::java::world::block::sign::Sign.is_waxed": "Określa czy tabliczka jest nieedytowalna poprzez nałożenie wosku.",
	"::java::world::block::sign::SignText.filtered_messages": "Pokazywane graczom z włączonym filtrem wulgaryzmów na Realmsach.",
	"::java::world::block::spawner::CustomSpawnRules.block_light_limit": "Zakres wymaganego poziomu światła bloku aby zespawnować byt.",
	"::java::world::block::spawner::CustomSpawnRules.sky_light_limit": "Zakres wymaganego poziomu światła nieba aby zespawnować byt.",
	"::java::world::block::spawner::SpawnEquipment.loot_table": "Generuje wyposażenie.",
	"::java::world::block::spawner::SpawnEquipment.slot_drop_chances": "Szansa z jaką mob upuści wyposażenie, gdy umrze.",
	"::java::world::block::spawner::Spawner.Delay": "Liczba ticków przed następnym spawnem.",
	"::java::world::block::spawner::Spawner.MaxNearbyEntities": "Maksymalna liczba bytów w pobliżu.",
	"::java::world::block::spawner::Spawner.MaxSpawnDelay": "Maksymalne losowe opóźnienie przed następnym spawnem.",
	"::java::world::block::spawner::Spawner.MinSpawnDelay": "Minimalne losowe opóźnienie przed następnym spawnem.",
	"::java::world::block::spawner::Spawner.RequiredPlayerRange": "Promień wyrażany w blokach, w którym musi przebywać gracz aby byty się spawnowały.",
	"::java::world::block::spawner::Spawner.SpawnCount": "Liczba bytów które mają zostać umieszczone.",
	"::java::world::block::spawner::Spawner.SpawnData": "Dane dla kolejnego moba do zrespienia.\nTo pole jest zastępowane przez `SpawnPotentials`.",
	"::java::world::block::spawner::Spawner.SpawnPotentials": "Byty które mogą zostać umieszczone.",
	"::java::world::block::spawner::Spawner.SpawnRange": "Zasięg w jakim spawnowane byty będą umieszczane.",
	"::java::world::block::structure_block::StructureBlock.author": "Autor struktury.",
	"::java::world::block::structure_block::StructureBlock.integrity": "Szansa z jaką każdy blok może zostać.",
	"::java::world::block::structure_block::StructureBlock.metadata": "Niestandardowe dane struktury. Przechowuje ID danych w trybie danych (\"DATA\").",
	"::java::world::block::structure_block::StructureBlock.posX": "Offset względny.",
	"::java::world::block::structure_block::StructureBlock.posY": "Offset względny.",
	"::java::world::block::structure_block::StructureBlock.posZ": "Offset względny.",
	"::java::world::block::structure_block::StructureBlock.powered": "Określa czy jest zasilany redstonem.",
	"::java::world::block::structure_block::StructureBlock.seed": "Ziarno dla losowej integralności.",
	"::java::world::block::structure_block::StructureBlock.showair": "Określa czy niewidzialne bloki mają być widoczne w obramowaniu struktury.",
	"::java::world::block::structure_block::StructureBlock.showboundingbox": "Określa czy ma być widoczne obramowanie struktury.",
	"::java::world::block::structure_block::StructureBlock.strict": "Jeśli `true`, bloki we wczytanej strukturze zostaną umieszczone bez wywoływania aktualizacji bloków. Spowoduje to, że struktura będzie dosłownie taka, jak została zapisana. Domyślnie `false`.",
	"::java::world::block::vault::Config.key_item": "Przedmiot wymagany do otwarcia skarbca.",
	"::java::world::block::vault::Config.loot_table": "Domyślnie \"minecraft:chests/trial_chambers/reward\".",
	"::java::world::block::vault::ServerData.items_to_eject": "Przedmioty które zostaną wyrzucone ze skarbca po jego otwarciu. Każdy wyrzucany przedmiot jest usuwany z listy; przed wyrzuceniem można je podejrzeć w tagu `display_item`.",
	"::java::world::block::vault::ServerData.rewarded_players": "Gdy jakiś gracz znajduje się na tej liście, nie może już otworzyć skarbca; nie dotyczy to pozostałych graczy.",
	"::java::world::block::vault::ServerData.state_updating_resumes_at": "Liczba ticków zanim tabela łupów zostanie uruchomiana ponownie celem aktualizacji wyświetlanego przedmiotu.",
	"::java::world::block::vault::SharedData.display_item": "Przedmiot wyświetlany graczom gdy znajdują się w zasięgu skarbca.",
	"::java::world::block::vault::Vault.shared_data": "Gdy gracz znajduje się w zasięgu skarbca, ten sam wyświetlany przedmiot będzie widoczny dla wszystkich graczy.\nTo pole używane jest również dla przedmiotów wyrzucanych w danym momencie ze skarbca.",
	"::java::world::block::vault::Vault.shared_data.display_item": "Przedmiot wyświetlany graczom gdy znajdują się w zasięgu skarbca.",
	"::java::world::component::block::ContainerSlot.slot": "ID slotu pojemnika.",
	"::java::world::component::entity::AxolotlVariant.Blue": "Rzadki wariant.",
	"::java::world::component::entity::RabbitVariant.Evil": "Zabójczy królik",
	"::java::world::component::item::ApplyEffectsConsumeEffect.probability": "Szansa na nałożenie efektów po zdegustowaniu.",
	"::java::world::component::item::AttributeDisplayOverride.value": "Zawartość tekstowa do pokazania w tym wpisie modyfikatora atrybutu.",
	"::java::world::component::item::AttributeDisplayType.Default": "Pokazuje obliczone wartości modyfikatora atrybutu w opisie.",
	"::java::world::component::item::AttributeDisplayType.Hidden": "Nie pokazuje wpisu modyfikatora atrybutu w opisie.",
	"::java::world::component::item::AttributeDisplayType.Override": "Zastępuje pokazywany tekst modyfikatora atrybutu.",
	"::java::world::component::item::AttributeModifier.display": "Kontroluje jak ten modyfikator jest pokazywany w opisie przedmiotu.",
	"::java::world::component::item::AttributeModifier.id": "Używany podczas zakładania i zdejmowania przedmiotu celem identyfikacji, jaki modyfikator należy dodać lub usunąć bytowi.",
	"::java::world::component::item::AttributeModifier.slot": "Slot lub typ slotu, w którym musi się znajdować przedmiot aby modyfikator zadziałał. Domyślnie `any`.",
	"::java::world::component::item::Equippable.allowed_entities": "Określa które byty mogą założyć ten przedmiot.",
	"::java::world::component::item::Equippable.camera_overlay": "Tekstura nakładki, która powinna być renderowana w widoku pierwszej osoby po założeniu przedmiotu.",
	"::java::world::component::item::Equippable.can_be_sheared": "Określa czy gracze mogą zdjąć mobowi ten przedmiot (o ile pozostałe warunki na to pozwolą), klikając na niego prawym przyciskiem myszy z nożycami w ręce.\nDomyślnie `false`.",
	"::java::world::component::item::Equippable.damage_on_hurt": "Określa czy ten przedmiot zostanie uszkodzony, gdy jego nosiciel zostanie zraniony. Domyślnie `true`.",
	"::java::world::component::item::Equippable.dispensable": "Określa czy ten przedmiot może zostać na kimś założony używając dozownika. Domyślnie `true`.",
	"::java::world::component::item::Equippable.equip_on_interact": "Określa czy gracze mogą założyć ten przedmiot prawoklikiem na docelowym mobie (o ile w ogóle cel pozwala na ten przedmiot).\nPrzedmiot nie zostanie założony, jeśli cel ma już jakiś przedmiot w odpowiadającym slocie.\nDomyślnie `false`.",
	"::java::world::component::item::Equippable.equip_sound": "Zdarzenie dźwiękowe jakie ma zostać odtworzone, gdy przedmiot zostanie założony.\nJeśli nie podano, zostanie odtworzony domyślny dźwięk zakładania zbroi.",
	"::java::world::component::item::Equippable.model": "Model jaki ma zostać użyty, gdy przedmiot jest założony.\nJeśli nie podano, zamiast modelu będzie renderowany sam przedmiot, o ile znajdzie się w slocie `head` - w przeciwnym razie nie będzie wcale renderowany.",
	"::java::world::component::item::Equippable.shearing_sound": "Zdarzenie dźwiękowe jakie ma zostać odtworzone, gdy przedmiot zostanie zdjęty z moba.\nJeśli nie podano, zostanie odtworzony domyślny dźwięk ścinania nożycami (`item.shears.snip`).",
	"::java::world::component::item::Equippable.swappable": "Określa czy można założyć przedmiot prawym przyciskiem myszy. Domyślnie `true`.",
	"::java::world::component::item::Explosion.colors": "Kolory wstępnych cząsteczek wybuchu, losowo wybierane.\nObliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie.",
	"::java::world::component::item::Explosion.fade_colors": "Kolory przenikających cząsteczek wybuchu.",
	"::java::world::component::item::Explosion.has_trail": "Efekt dodawany gwiazdce pirotechnicznej za pomocą Diamentu.",
	"::java::world::component::item::Explosion.has_twinkle": "Efekt dodawany gwiazdce pirotechnicznej za pomocą Jasnopyłu.",
	"::java::world::component::item::Explosion.shape": "Kształt wybuchu.",
	"::java::world::component::item::Food.can_always_eat": "Określa czy przedmiot może zostać zjedzony nawet jeśli gracz jest w pełni najedzony. Domyślnie `false`.",
	"::java::world::component::item::Food.eat_seconds": "Liczba sekund ile zajmuje zjedzenie tego przedmiotu. Domyślnie `1.6`.",
	"::java::world::component::item::Food.effects": "Nakładane po zjedzeniu.",
	"::java::world::component::item::Food.nutrition": "Przywracane punkty najedzenia po zjedzeniu (maksymalnie `20.0`).",
	"::java::world::component::item::Food.saturation": "Dokładna wartość dodawana do poziomu nasycenia gracza, ograniczona do [nowej] wartości punktów najedzenia.",
	"::java::world::component::item::Food.using_converts_to": "Działa podobnie do wiadra z mlekiem.",
	"::java::world::component::item::FoodEffect.probability": "Szansa z jaką efekt zostanie nałożony. Domyślnie `1`.",
	"::java::world::component::item::ItemDamageFunction.base": "Stała wartość uszkodzeń nakładana na przedmiot, jeśli przekroczono `threshold`.",
	"::java::world::component::item::ItemDamageFunction.factor": "Ułamek zadanych uszkodzeń nakładanych na przedmiot, jeśli przekroczono `threshold`.",
	"::java::world::component::item::ItemUseAnimation.OldTrident": "Używane przez Trójzęby.",
	"::java::world::component::item::ItemUseAnimation.TootHorn": "Używane przez Kozie Rogi.",
	"::java::world::component::item::LodestoneTracker.target": "Opcjonalna lokalizacja lodestone'a. Jeśli nie podano, kompas będzie kręcić śmigło.",
	"::java::world::component::item::LodestoneTracker.tracked": "Jeśli `true`, komponent zostanie usunięty gdy lodestone zostanie zniszczony. Jeśli `false`, komponent pozostanie. Domyślnie `true`.",
	"::java::world::component::item::MapDecoration.rotation": "Rotacja dekoracji, wyrażana w stopniach zgodnie z ruchem wskazówek zegara.",
	"::java::world::component::item::MapDecoration.type": "Typ dekoracji.",
	"::java::world::component::item::MapDecoration.x": "Światowa pozycja X dekoracji.",
	"::java::world::component::item::MapDecoration.z": "Światowa pozycja Z dekoracji.",
	"::java::world::component::item::PotionContents.custom_color": "Obliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie.",
	"::java::world::component::item::Rarity.Common": "Biała nazwa, lub aqua jeśli zaklęto.",
	"::java::world::component::item::Rarity.Epic": "Jasnofioletowa nazwa.",
	"::java::world::component::item::Rarity.Rare": "Aqua nazwa, lub jasnofioletowa jeśli zaklęto.",
	"::java::world::component::item::Rarity.Uncommon": "Żółta nazwa, lub aqua jeśli zaklęto.",
	"::java::world::component::item::SuspiciousStewEffect.duration": "Czas trwania efektu wyrażany w tickach. Domyślnie `160` - 8 sekund.",
	"::java::world::component::item::TeleportRandomlyConsumeEffect.diameter": "Domyślnie `16`.",
	"::java::world::component::item::Tool.can_destroy_blocks_in_creative": "Jeśli `false`, gracze nie mogą niszczyć bloków trzymając to narzędzie w trybie kreatywnym. Domyślnie `true`.",
	"::java::world::component::item::Tool.damage_per_block": "Ilość trwałości jaka ma zostać odjęta za każdym razem, gdy tym narzędziem zniszczono blok. Musi to być liczba nieujemna.",
	"::java::world::component::item::Tool.default_mining_speed": "Używane jeśli żadna zasada nie zastępuje tego pola. Domyślnie `1.0`",
	"::java::world::component::item::Tool.rules": "Bloki z którymi to narzędzie ma specjalne zachowanie.",
	"::java::world::component::item::ToolRule.speed": "Zastępuje domyślną prędkość kopania.",
	"::java::world::component::item::TooltipDisplay.hidden_components": "Lista komponentów która powinna zostać ukryta z opisu przedmiotu.",
	"::java::world::component::item::TooltipDisplay.hide_tooltip": "Jeśli `true`, opis nie będzie wyświetlany po najechaniu myszką na przedmiot. Domyślnie `false`.",
	"::java::world::component::item::Trim.material": "Materiał zdobienia tego przedmiotu.",
	"::java::world::component::item::Trim.pattern": "Wzór zdobienia tego przedmiotu.",
	"::java::world::component::item::UseEffects.can_sprint": "Określa czy gracz może jednocześnie biegać i używać tego przedmiotu.\nDomyślnie `false`.",
	"::java::world::component::item::UseEffects.speed_multiplier": "Mnożnik szybkości nakładany na gracza gdy używa tego przedmiotu.\nDomyślnie 0.1.",
	"::java::world::component::item::Weapon.item_damage_per_attack": "Ilość uszkodzeń nakładana na broń co każdy wykonany atak. Domyślnie `1`.",
	"::java::world::component::item::WrittenBookContent.generation": "Liczba określająca ile razy skopiowano tę książkę. Domyślnie 0. Jeśli ta wartość jest większa niż 1, książki nie można więcej kopiować.",
	"::java::world::component::item::WrittenBookContent.resolved": "Określa czy dynamiczna zawartość na stronach została rozwiązana.",
	"::java::world::component::item::blocks_attacks.block_delay_seconds": "Liczba wyrażana w sekundach, określająca ile co najmniej musi być wciśnięty prawy przycisk myszy, aby można było blokować ataki.\nDomyślnie `0`.",
	"::java::world::component::item::blocks_attacks.block_sound": "Dźwięk odtwarzany gdy uda się zablokować atak.",
	"::java::world::component::item::blocks_attacks.bypassed_by": "Tych typów obrażeń nie można zablokować.",
	"::java::world::component::predicate::CollectionCountPredicate.count": "Liczba wpisów które muszą pasować do testu.",
	"::java::world::component::predicate::CollectionPredicate.contains": "Lista testów. Dla każdego testu musi być przynajmniej jeden wpis, którego zawartość będzie dokładnie pasować.",
	"::java::world::component::predicate::CollectionPredicate.size": "Jeśli podano, jest to łączna liczba wpisów w tej kolekcji.",
	"::java::world::entity::AnyEntity.id": "ID tego bytu. Nie istnieje u graczy.",
	"::java::world::entity::area_effect_cloud::AreaEffectCloud.Age": "Liczba ticków przez ile istniał.\nKontroluje kiedy ma się zdespawnować; jeśli wartość będzie większa niż `Duration` + `WaitTime`.",
	"::java::world::entity::area_effect_cloud::AreaEffectCloud.Color": "Kolor cząsteczek.\nObliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie.",
	"::java::world::entity::area_effect_cloud::AreaEffectCloud.custom_particle": "Jeśli podano, będzie ona cząsteczką tego area_effect_cloud'a zamiast domyślnej cząsteczki `entity_effect` opartej na zawartości mikstrury.",
	"::java::world::entity::display::DisplayBase.billboard": "Kontroluje czy model powinien się obracać w stronę gracza gdy jest renderowany. Domyślnie `fixed`.",
	"::java::world::entity::display::DisplayBase.glow_color_override": "Zastępuje kolor obramowania blasku. Jeśli przyjmie wartość 0, zostanie użyty kolor drużyny. Domyślnie 0.\nObliczane formułą `RED << 16 | GREEN << 8 | BLUE`. Każde z tych pól musi mieć wartość między `0` a `255` włącznie."
}
