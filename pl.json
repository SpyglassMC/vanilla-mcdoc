{
	"::java::assets::atlas::Directory.prefix": "Prefix nazwy sprite'a, zwykle zakończony znakiem `/`.",
	"::java::assets::atlas::Filter.pattern": "Wzór do usuwania sprite'ów znajdujących się już w atlasie. Uwzględniana jest kolejność podania źródeł.",
	"::java::assets::atlas::Single.resource": "Lokalizacja pojedynczej tekstury źródła.",
	"::java::assets::block_state_definition::ModelVariantBase.uvlock": "Jeśli ustawiono na `true`, tekstury nie będą obracane z blokiem.",
	"::java::assets::font::UnihexOverrideRange.from": "Minimalny codepoint w zakresie (włącznie).",
	"::java::assets::font::UnihexOverrideRange.to": "Maksymalny codepoint w zakresie (włącznie).",
	"::java::assets::font::UnihexProvider.hex_file": "Archiwum ZIP zawierające jeden lub więcej plików typu *.hex (pliki w archiwum o innych rozszerzeniach są pomijane).",
	"::java::assets::item_definition::Chest.openness": "Domyślnie `0`.",
	"::java::assets::item_definition::CompassTarget.Lodestone": "Wskazuje na lokalizację przechowywaną w komponencie `lodestone_tracker`.",
	"::java::assets::item_definition::CompassTarget.None": "Zawsze nieprawidłowy cel.",
	"::java::assets::item_definition::CompassTarget.Recovery": "Wskazuje na lokalizację śmierci ostatniego gracza.",
	"::java::assets::item_definition::CompassTarget.Spawn": "Wskazuje na spawn świata.",
	"::java::assets::item_definition::ComponentFlags.predicate": "Predykat komponentu do sprawdzenia.",
	"::java::assets::item_definition::ComponentFlags.value": "Wartość specyficzna dla danego predykatu.",
	"::java::assets::item_definition::ComponentStrings.component": "Typ komponentu do sprawdzania jego wartości.\nJeśli wybrana wartość pochodzi z rejestru do którego klient nie ma dostępu,\nwpis ten będzie dyskretnie ignorowany.",
	"::java::assets::item_definition::ConstantTint.value": "Stały odcień koloru który ma zostać zastosowany.",
	"::java::assets::item_definition::CustomModelDataFlags.index": "Indeks listy `flags` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataFloats.index": "Indeks listy `floats` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataStrings.index": "Indeks listy `strings` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::CustomModelDataTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `custom_model_data`, bądź gdy nie ma koloru w ustalonym indeksie.",
	"::java::assets::item_definition::CustomModelDataTint.index": "Indeks listy `colors` w komponencie `custom_model_data`. Domyślnie 0.",
	"::java::assets::item_definition::DyeTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `dyed_color`.",
	"::java::assets::item_definition::FireworkTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `firework_explosion`.",
	"::java::assets::item_definition::Head.animation": "Kontroluje czas animacji dla głów piglina oraz smoka. Domyślnie `0`.",
	"::java::assets::item_definition::Head.texture": "Tekstura która ma zostać użyta zamiast tekstury z `kind`.",
	"::java::assets::item_definition::ItemDefinition.hand_animation_on_swap": "Ustala czy animacja dół-i-góra powinna być odtwarzana w widoku pierwszej osoby, jeśli zmieniła się liczba przedmiotów w stacku.\nDomyślnie `true`.",
	"::java::assets::item_definition::ItemDefinition.oversized_in_gui": "Ustala czy model przedmiotu może być większy niż slot na ten przedmiot.\nDomyślnie `false`, co sprawia, że model przedmiotu w GUI jest przycięty do rozmiaru slotu na przedmiot.\nFunkcjonalność `true` w tej chwili **nie** jest oficjalnie wspierana.",
	"::java::assets::item_definition::KeybindDown.keybind": "ID keybindu które ma zostać sprawdzone.",
	"::java::assets::item_definition::LocalTime.pattern": "Format używany do formatowania daty i czasu.\nPrzykładowo: `yyyy-MM-dd`, `HH:mm:ss`.",
	"::java::assets::item_definition::LocalTime.time_zone": "Domyślnie strefa czasowa klienta.\nPrzykładowo: `Europa/Sztokholm`, `GMT+0:45`.",
	"::java::assets::item_definition::MapColorTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `map_color`.",
	"::java::assets::item_definition::PotionTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje komponentu `potion_contents`, bądź gdy mikstura nie ma efektów ani ustawionego `custom_color`.",
	"::java::assets::item_definition::RangeDispatch.fallback": "Model przedmiotu który ma zostać wyrenderowany, jeśli żaden z wpisów nie był mniejszy bądź równy podanej wartości.",
	"::java::assets::item_definition::RangeDispatch.scale": "Mnożnik wartości. Domyślnie 1.",
	"::java::assets::item_definition::Select.fallback": "Model przedmiotu który ma zostać wyrenderowany, jeśli żaden z przypadków nie został spełniony.",
	"::java::assets::item_definition::ShulkerBox.orientation": "Domyślnie `up`.",
	"::java::assets::item_definition::Special.base": "Model podstawowy, zapewniający transformacje, teksturę cząstek oraz światło GUI.",
	"::java::assets::item_definition::Special.model": "Renderuje specjalny, odgórnie zaprogramowany model.",
	"::java::assets::item_definition::TeamTint.default": "Odcień który ma zostać zastosowany, jeśli brakuje bytu kontekstowego, byt nie należy do drużyny, bądź drużyna nie ma koloru.",
	"::java::assets::item_definition::UseCycle.period": "Zwraca resztę z dzielenia pozostałych ticków użycia przedmiotu przez `period`.\nDomyślnie 1.",
	"::java::assets::item_definition::UseDuration.remaining": "Jeśli `true`, zwraca liczbę pozostałych ticków użycia przedmiotu.\nJeśli `false`, zwraca dotychczasową liczbę ticków użycia przedmiotu.\nDomyślnie `false`.",
	"::java::assets::lang::LangDeprecated.removed": "Lista usuniętych kluczy tłumaczeń.",
	"::java::assets::lang::LangDeprecated.renamed": "Mapowanie kluczy tłumaczeń o zmienionej nazwie ze starych na nowe.",
	"::java::assets::model::ModelElementRotation.rescale": "Domyślnie `false`.",
	"::java::assets::model::Predicates.HoneyLevel": "Poziom miodu w ulach i w gniazdach pszczół.",
	"::java::assets::model::Predicates.Level": "Stan bloku `level` na świecących przedmiotach.",
	"::java::assets::model::Predicates.Throwing": "Sprawdza czy trójząb jest używany.",
	"::java::assets::model::Predicates.Tooting": "Sprawdza czy kozi róg jest używany.",
	"::java::assets::regional_compliancies::Notification": "Kod regionu.",
	"::java::assets::shader::post::InternalTarget.clear_color": "Cel zostanie wypełniony tym kolorem kiedy zostanie stworzony lub wyczyszczony. Domyślnie `0`.",
	"::java::assets::shader::post::InternalTarget.persistent": "Jeśli `true`, cel będzie ciągle obecny pomiędzy klatkami. Domyślnie `false`.\nZawartość celu zostanie wyczyszczona jeśli okno zmieni rozmiar.",
	"::java::assets::shader::post::UniformValue.name": "Pole nieużywane przez samą grę, lecz w istocie jest warte podania.",
	"::java::assets::shader::program::Defines.flags": "Flagi które zostaną wstawione jako `#define <klucz>` na samym początku pliku.",
	"::java::assets::shader::program::Defines.values": "Wartości które zostaną wstawione jako `#define <klucz> <wartosc>` na samym początku pliku.",
	"::java::assets::shader::program::ShaderProgram.blend": "Nieużywane.",
	"::java::assets::shader::program::ShaderProgram.defines": "Definiuje dyrektywy GLSL wstawiane w źródle shadera.",
	"::java::assets::sounds::Sound.attenuation_distance": "Modyfikuje współczynnik redukcji natężenia dźwięku w zależności od odległości. Domyślnie `16`.",
	"::java::assets::sounds::Sound.pitch": "Domyślnie `1.0`.",
	"::java::assets::sounds::Sound.preload": "Ustala czy dźwięk powinien być załadowany w czasie ładowania paczki, zamiast w momencie odtworzenia dźwięku. Używane przez otoczenie pod wodą. Domyślnie `false`.",
	"::java::assets::sounds::Sound.stream": "Jeśli `true`, dźwięk będzie strumieniowany z pliku. Dźwięki dłuższe niż kilka sekund powinny mieć to włączone, aby zapobiec lagom. Domyślnie `false`.\nJeśli `false`, wiele instancji tego dźwięku może być jednocześnie odtwarzane. Jeśli `true`, maksymalnie 4 instancje (tego samego typu) mogą być odtwarzane naraz.",
	"::java::assets::sounds::Sound.type": "Ustala jak `name` jest interpretowane. Domyślnie `sound`.",
	"::java::assets::sounds::Sound.volume": "Domyślnie `1.0`.",
	"::java::assets::sounds::Sound.weight": "Szansa jaką ma ten dźwięk żeby zostać odtworzony. Domyślnie `1`.",
	"::java::assets::sounds::SoundEventRegistration.sounds": "Pliki dźwiękowe używane przez te zdarzenie. Jeden losowy dźwięk zostanie odtworzony jeśli zdarzenie zostanie wywołane. Domyślnie to przypuszczana ścieżka.",
	"::java::assets::sounds::SoundType.File": "Plik.",
	"::java::assets::sounds::SoundType.SoundEvent": "Uprzednio zdefiniowane zdarzenie.",
	"::java::assets::texture_meta::ColormapTextureMeta.blur": "Sprawia, że tekstura jest rozmyta, gdy jest oglądana z bliska. Domyślnie `false`.",
	"::java::assets::texture_meta::ColormapTextureMeta.clamp": "Sprawia, że tekstura jest rozciągana zamiast bycia umieszczoną sąsiadująco w przypadkach, gdzie normalnie by tak było, takich jak cienie. Domyślnie `false`.",
	"::java::assets::texture_meta::ColormapTextureMeta.mipmaps": "Niestandardowe wartości mipmapy dla tekstury.",
	"::java::assets::texture_meta::GuiMeta.scaling": "Konfiguruje jak tekstura GUI powinna być skalowana. Domyślnie `stretch`.",
	"::java::assets::texture_meta::NineSlice.stretch_inner": "Domyślnie`false`.",
	"::java::assets::texture_meta::TextureAnimation.frames": "Domyślnie pokazuje wszystkie klatki od góry do dołu.",
	"::java::assets::texture_meta::TextureAnimation.frames.index": "Liczba odpowiadająca pozycji klatki od góry, gdzie górna klatka jest równa 0.",
	"::java::assets::texture_meta::TextureAnimation.frames.time": "Czas wyrażony w tickach do pokazania tej klatki, zastępujący `frametime`.",
	"::java::assets::texture_meta::TextureAnimation.frametime": "Ustawia domyślny czas dla każdej klatki w przyroście jednego ticku gry. Domyślnie 1.",
	"::java::assets::texture_meta::TextureAnimation.interpolate": "Jeśli `true`, dodatkowe klatki zostaną wygenerowane pomiędzy klatkami, mające pomiędzy nimi czas klatki większy niż 1. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureAnimationFrame.index": "Liczba odpowiadająca pozycji klatki od góry, gdzie górna klatka jest równa 0.",
	"::java::assets::texture_meta::TextureAnimationFrame.time": "Czas wyrażony w tickach do pokazania tej klatki, zastępujący `frametime`.",
	"::java::assets::texture_meta::TextureMeta.texture": "Dostępne tylko w colormapach.",
	"::java::assets::texture_meta::TextureMeta.texture.blur": "Sprawia, że tekstura jest rozmyta, gdy jest oglądana z bliska. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureMeta.texture.clamp": "Sprawia, że tekstura jest rozciągana zamiast bycia umieszczoną sąsiadująco w przypadkach, gdzie normalnie by tak było, takich jak cienie. Domyślnie `false`.",
	"::java::assets::texture_meta::TextureMeta.texture.mipmaps": "Niestandardowe wartości mipmapy dla tekstury.",
	"::java::assets::texture_meta::TextureMeta.villager": "Dostępne tylko dla tekstur osadników.",
	"::java::assets::waypoint_style::WaypointStyle.far_distance": "Domyślnie `322`.",
	"::java::assets::waypoint_style::WaypointStyle.near_distance": "Domyślnie `128`.",
	"::java::data::advancement::Advancement.criteria": "Jeśli `requirements` nie zostanie zdefiniowane, wszystkie podane kryteria będą wymagane.",
	"::java::data::advancement::Advancement.display": "Jeśli istnieje, postępy będą widoczne w kartach postępów.",
	"::java::data::advancement::Advancement.parent": "Jeśli to pole nie zostanie podane, ten postęp jest postępem bazowym.\nWzajemne odniesienia spowodują błąd podczas ładowania.",
	"::java::data::advancement::Advancement.requirements": "Zawiera wszystkie klucze `criteria`.\nJeśli wszystkie kryteria są wymagane jednocześnie, można to pole ominąć.\nJeśli jest wiele kryteriów, zawiera listę list z kryteriami (wszystkie kryteria muszą zostać podane).\nJeśli każda z tych list ma dowolne spełnione kryterium, postęp zostaje zaliczony (w skrócie: grupowanie AND grup OR)",
	"::java::data::advancement::Advancement.rewards": "Przyznawane graczowi gdy ten postęp zostanie zaliczony.",
	"::java::data::advancement::Advancement.sends_telemetry_event": "Domyślnie `false`. Klient vanilla gry sczytuje to pole jedynie osiągnięciom w przestrzeni nazw `minecraft`.",
	"::java::data::advancement::AdvancementCriterion.trigger": "Wiele wyzwalaczy może występować wiele razy, jednakże nagroda może zostać przyznana wielokrotnie tylko wtedy, gdy postęp zostanie najpierw graczowi unieważniony. Jest to często stosowana praktyka, gdy nagrodą jest wywołanie funkcji.",
	"::java::data::advancement::AdvancementDisplay.announce_to_chat": "Określa czy na czacie ma zostać ogłoszone, że ten postęp został zaliczony. Domyślnie `true`.",
	"::java::data::advancement::AdvancementDisplay.background": "Używane na karcie postępów (dotyczy tylko postępów bazowych).",
	"::java::data::advancement::AdvancementDisplay.frame": "Określa kształt ramki postępu. Domyślnie `task`.",
	"::java::data::advancement::AdvancementDisplay.hidden": "Ustala, czy ten postęp wraz z jego dziećmi mają pozostać ukryte w drzewku postępów\naż do czasu jego zaliczenia.\nNie ma to wpływu na same postępy bazowe, lecz mimo wszystko wpływa to na jego dzieci.\nDomyślnie `false`.",
	"::java::data::advancement::AdvancementDisplay.show_toast": "Ustala czy ma zostać wyświetlony dymek po zaliczeniu tego postępu. Domyślnie `true`.",
	"::java::data::advancement::AdvancementFrame.Challenge": "Elegancka krawędź z kolcami (używana np. w postępie za zatłuczenie każdego moba).",
	"::java::data::advancement::AdvancementFrame.Goal": "Okrągła krawędź (używana np. w postępie za wybudowanie beacona o pełnej mocy).",
	"::java::data::advancement::AdvancementFrame.Task": "Zwykła krawędź.",
	"::java::data::advancement::AdvancementRewards.experience": "Ilość XP do dodania.",
	"::java::data::advancement::AdvancementRewards.function": "Funkcja która ma zostać wykonana jako gracz (lecz nie w miejscu gracza). Tagi grup funkcji nie są dozwolone.",
	"::java::data::advancement::AdvancementRewards.loot": "Tabela łupów do dania.",
	"::java::data::advancement::AdvancementRewards.recipes": "Receptury do odblokowania.",
	"::java::data::advancement::predicate::BlockPredicate.components": "Dopasuj dokładne wartości komponentu danych na bycie blokowym.",
	"::java::data::advancement::predicate::BlockPredicate.predicates": "Sprawdza wartości komponentu danych na bycie blokowym.",
	"::java::data::advancement::predicate::DamagePredicate.blocked": "Ustala czy obrażenie zostało pomyślnie zblokowane.",
	"::java::data::advancement::predicate::DamagePredicate.dealt": "Ilość przychodzących obrażeń przed redukcją obrażeń.",
	"::java::data::advancement::predicate::DamagePredicate.source_entity": "Źródło obrażeń (np. szkielet wystrzeliwujący strzałę, gracz podpalający TNT).",
	"::java::data::advancement::predicate::DamagePredicate.taken": "Ilość przychodzących obrażeń po redukcji obrażeń.",
	"::java::data::advancement::predicate::DamagePredicate.type": "Typ źródła obrażeń.",
	"::java::data::advancement::predicate::DamageSourcePredicate.direct_entity": "Byt wprost odpowiedzialny za obrażenie (np. strzała, TNT).",
	"::java::data::advancement::predicate::DamageSourcePredicate.is_direct": "Obrażenie jest bezpośrednie kiedy byt bezpośredni jest jednocześnie bytem źródłowym.",
	"::java::data::advancement::predicate::DamageSourcePredicate.source_entity": "Źródło obrażeń (np. szkielet wystrzeliwujący strzałę, gracz podpalający TNT).",
	"::java::data::advancement::predicate::DamageSourcePredicate.tags": "Tagi typu obrażeń w których typ obrażeń się znajduje.",
	"::java::data::advancement::predicate::DamageTagPredicate.expected": "Ustala czy ma być spodziewane żeby obrażenie miało tag.",
	"::java::data::advancement::predicate::DamageTagPredicate.id": "Tag typu obrażeń do sprawdzenia.",
	"::java::data::advancement::predicate::EntityPredicate.components": "Dopasuj dokładne wartości komponentu danych na bycie.",
	"::java::data::advancement::predicate::EntityPredicate.movement_affected_by": "Określa czy blok na maksymalnie 0.5 bloków pod bytem jest obecny, co może wpłynąć na jego ruch.",
	"::java::data::advancement::predicate::EntityPredicate.predicates": "Sprawdza wartości komponentu danych na bycie.",
	"::java::data::advancement::predicate::LocationPredicate.can_see_sky": "Określa czy lokacja ma najwyższy możliwy poziom światła dziennego.",
	"::java::data::advancement::predicate::LocationPredicate.smokey": "Określa czy blok jest powyżej (do 5 bloków) ogniska bądź ogniska dusz.",
	"::java::data::advancement::predicate::PlayerPredicate.level": "Doświadczenie/Poziom XP."
}
